.\" Automatically generated by Pod::Man v1.34, Pod::Parser v1.13
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "BUSYBOX 1"
.TH BUSYBOX 1 "2003-09-12" "version 1.00-pre3" "BusyBox"
.SH "NAME"
BusyBox \- The Swiss Army Knife of Embedded Linux
.SH "SYNTAX"
.IX Header "SYNTAX"
.Vb 1
\& BusyBox <function> [arguments...]  # or
.Ve
.PP
.Vb 1
\& <function> [arguments...]          # if symlinked
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
BusyBox combines tiny versions of many common \s-1UNIX\s0 utilities into a single
small executable. It provides minimalist replacements for most of the utilities
you usually find in fileutils, shellutils, findutils, textutils, grep, gzip,
tar, etc.  BusyBox provides a fairly complete \s-1POSIX\s0 environment for any small
or embedded system.  The utilities in BusyBox generally have fewer options than
their full-featured \s-1GNU\s0 cousins; however, the options that are included provide
the expected functionality and behave very much like their \s-1GNU\s0 counterparts. 
.PP
BusyBox has been written with size-optimization and limited resources in mind.
It is also extremely modular so you can easily include or exclude commands (or
features) at compile time.  This makes it easy to customize your embedded
systems.  To create a working system, just add a kernel, a shell (such as ash),
and an editor (such as elvis-tiny or ae).
.SH "USAGE"
.IX Header "USAGE"
When you create a link to BusyBox for the function you wish to use, when BusyBox
is called using that link it will behave as if the command itself has been invoked.
.PP
For example, entering
.PP
.Vb 2
\&        ln -s ./BusyBox ls
\&        ./ls
.Ve
.PP
will cause BusyBox to behave as 'ls' (if the 'ls' command has been compiled
into BusyBox). 
.PP
You can also invoke BusyBox by issuing the command as an argument on the
command line.  For example, entering
.PP
.Vb 1
\&        ./BusyBox ls
.Ve
.PP
will also cause BusyBox to behave as 'ls'. 
.SH "COMMON OPTIONS"
.IX Header "COMMON OPTIONS"
Most BusyBox commands support the \fB\-h\fR option to provide a
terse runtime description of their behavior. 
.SH "COMMANDS"
.IX Header "COMMANDS"
Currently defined functions include:
.PP
.Vb 23
\&        addgroup, adduser, adjtimex, ar, arping, ash, awk, basename,
\&        bunzip2, busybox, bzcat, cal, cat, chgrp, chmod, chown, chroot,
\&        chvt, clear, cmp, cp, cpio, crond, crontab, cut, date, dc, dd,
\&        deallocvt, delgroup, deluser, df, dirname, dmesg, dos2unix, dpkg,
\&        dpkg-deb, du, dumpkmap, dumpleases, dutmp, echo, egrep, env, expr,
\&        false, fbset, fdflush, fdformat, fgrep, find, fold, free, freeramdisk,
\&        fsck.minix, ftpget, ftpput, getopt, getty, grep, gunzip, gzip,
\&        halt, hdparm, head, hexdump, hostid, hostname, httpd, hush, hwclock, 
\&                id, ifconfig, ifdown, ifup, inetd, init, insmod, ip, ipcalc, iplink,
\&        iproute, iptunnel, kill, killall, klogd, lash, length, linuxrc,
\&        ln, loadacm, loadfont, loadkmap, logger, login, logname, logread,
\&        losetup, ls, lsmod, makedevs, md5sum, mesg, minit, mkdir, mkfifo,
\&        mkfs.minix, mknod, mkswap, mktemp, modprobe, more, mount, msh,
\&        msvc, mt, mv, nameif, nc, netstat, nslookup, od, openvt, passwd,
\&        patch, pidfilehack, pidof, ping, ping6, pivot_root, poweroff,
\&        printf, ps, pwd, rdate, readlink, realpath, reboot, renice, reset,
\&        rm, rmdir, rmmod, route, rpm, rpm2cpio, run-parts, sed, setkeycodes,
\&        sha1sum, sleep, sort, start-stop-daemon, strings, stty, su, sulogin,
\&        swapoff, swapon, sync, syslogd, tail, tar, tee, telnet, telnetd,
\&        test, tftp, time, top, touch, tr, traceroute, true, tty, udhcpc,
\&        udhcpd, umount, uname, uncompress, uniq, unix2dos, unzip, 
\&        uptime, usleep, uudecode, uuencode, vconfig, vi, vlock, watch,
\&        watchdog, wc, wget, which, who, whoami, xargs, yes, zcat, [
.Ve
.IP "\fBaddgroup\fR" 4
.IX Item "addgroup"
addgroup [\s-1OPTIONS\s0] group_name [user_name]
.Sp
Adds a group to the systemOptions:
.Sp
.Vb 1
\&        -g              specify gid
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBadduser\fR" 4
.IX Item "adduser"
adduser [\s-1OPTIONS\s0] user_name
.Sp
Adds a user to the systemOptions:
.Sp
.Vb 7
\&        -h DIR          Assign home directory DIR
\&        -g GECOS                Assign gecos field GECOS
\&        -s SHELL                Assign login shell SHELL
\&        -G              Add the user to existing group GROUP
\&        -S              create a system user (ignored)
\&        -D              Do not assign a password (logins still possible via ssh)
\&        -H              Do not create the home directory
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBadjtimex\fR" 4
.IX Item "adjtimex"
adjtimex [\fB\-q\fR] [\fB\-o\fR offset] [\fB\-f\fR frequency] [\fB\-p\fR timeconstant] [\fB\-t\fR tick]
.Sp
Reads and optionally sets system timebase parameters.
See \fIadjtimex\fR\|(2).
.Sp
Options:
.Sp
.Vb 6
\&        -q              quiet mode - do not print
\&        -o offset       time offset, microseconds
\&        -f frequency    frequency adjust, integer kernel units (65536 is 1ppm)
\&                        (positive values make the system clock run fast)
\&        -t tick         microseconds per tick, usually 10000
\&        -p timeconstant
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBar\fR" 4
.IX Item "ar"
ar \-[ov][ptx] \s-1ARCHIVE\s0 \s-1FILES\s0
.Sp
Extract or list \s-1FILES\s0 from an ar archive.
.Sp
Options:
.Sp
.Vb 5
\&        -o              preserve original dates
\&        -p              extract to stdout
\&        -t              list
\&        -x              extract
\&        -v              verbosely list files processed
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBarping\fR" 4
.IX Item "arping"
arping [\fB\-fqbDUA\fR] [\fB\-c\fR count] [\fB\-w\fR timeout] [\fB\-I\fR device] [\fB\-s\fR sender] target
.Sp
Ping hosts by \s-1ARP\s0 requests/replies.
.Sp
Options:
.Sp
.Vb 11
\&        -f              Quit on first ARP reply
\&        -q              Be quiet
\&        -b              Keep broadcasting, don't go unicast
\&        -D              Duplicated address detection mode
\&        -U              Unsolicited ARP mode, update your neighbours
\&        -A              ARP answer mode, update your neighbours
\&        -c count        Stop after sending count ARP request packets
\&        -w timeout      Time to wait for ARP reply, in seconds
\&        -I device       Outgoing interface name, default is eth0
\&        -s sender       Set specific sender IP address
\&        target          Target IP address of ARP request
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBbasename\fR" 4
.IX Item "basename"
basename \s-1FILE\s0 [\s-1SUFFIX\s0]
.Sp
Strips directory path and suffixes from \s-1FILE\s0.
If specified, also removes any trailing \s-1SUFFIX\s0.
.Sp
Example:
.Sp
.Vb 6
\&        $ basename /usr/local/bin/foo
\&        foo
\&        $ basename /usr/local/bin/
\&        bin
\&        $ basename /foo/bar.txt .txt
\&        bar
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBbunzip2\fR" 4
.IX Item "bunzip2"
bunzip2 [\s-1OPTION\s0]... [\s-1FILE\s0]
.Sp
Uncompress \s-1FILE\s0 (or standard input if \s-1FILE\s0 is '\-' or omitted).
.Sp
Options:
.Sp
.Vb 2
\&        -c      Write output to standard output
\&        -f      Force
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBbzcat\fR" 4
.IX Item "bzcat"
bzcat \s-1FILE\s0
.Sp
Uncompress to stdout.
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBcal\fR" 4
.IX Item "cal"
cal [\fB\-jy\fR] [[month] year]
.Sp
Display a calendar.
.Sp
Options:
.Sp
.Vb 2
\&        -j      Use julian dates.
\&        -y      Display the entire year.
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBcat\fR" 4
.IX Item "cat"
cat [\fB\-u\fR] [\s-1FILE\s0]...
.Sp
Concatenates \s-1FILE\s0(s) and prints them to stdout.
.Sp
Options:
.Sp
.Vb 1
\&        -u      ignored since unbuffered i/o is always used
.Ve
.Sp
Example:
.Sp
.Vb 2
\&        $ cat /proc/uptime
\&        110716.72 17.67
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBchgrp\fR" 4
.IX Item "chgrp"
chgrp [\s-1OPTION\s0]... \s-1GROUP\s0 \s-1FILE\s0...
.Sp
Change the group membership of each \s-1FILE\s0 to \s-1GROUP\s0.
.Sp
Options:
.Sp
.Vb 1
\&        -R      Changes files and directories recursively.
.Ve
.Sp
Example:
.Sp
.Vb 5
\&        $ ls -l /tmp/foo
\&        -r--r--r--    1 andersen andersen        0 Apr 12 18:25 /tmp/foo
\&        $ chgrp root /tmp/foo
\&        $ ls -l /tmp/foo
\&        -r--r--r--    1 andersen root            0 Apr 12 18:25 /tmp/foo
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBchmod\fR" 4
.IX Item "chmod"
chmod [\fB\-R\fR] MODE[,MODE]... \s-1FILE\s0...
.Sp
Each \s-1MODE\s0 is one or more of the letters ugoa, one of the
symbols +\-= and one or more of the letters rwxst.
.Sp
Options:
.Sp
.Vb 1
\&        -R      Changes files and directories recursively.
.Ve
.Sp
Example:
.Sp
.Vb 8
\&        $ ls -l /tmp/foo
\&        -rw-rw-r--    1 root     root            0 Apr 12 18:25 /tmp/foo
\&        $ chmod u+x /tmp/foo
\&        $ ls -l /tmp/foo
\&        -rwxrw-r--    1 root     root            0 Apr 12 18:25 /tmp/foo*
\&        $ chmod 444 /tmp/foo
\&        $ ls -l /tmp/foo
\&        -r--r--r--    1 root     root            0 Apr 12 18:25 /tmp/foo
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBchown\fR" 4
.IX Item "chown"
chown [ \fB\-Rh\fR ]...  OWNER[<.|:>[\s-1GROUP\s0]] \s-1FILE\s0...
.Sp
Change the owner and/or group of each \s-1FILE\s0 to \s-1OWNER\s0 and/or \s-1GROUP\s0.
.Sp
Options:
.Sp
.Vb 2
\&        -R      Changes files and directories recursively.
\&        -h      Do not dereference symbolic links.
.Ve
.Sp
Example:
.Sp
.Vb 8
\&        $ ls -l /tmp/foo
\&        -r--r--r--    1 andersen andersen        0 Apr 12 18:25 /tmp/foo
\&        $ chown root /tmp/foo
\&        $ ls -l /tmp/foo
\&        -r--r--r--    1 root     andersen        0 Apr 12 18:25 /tmp/foo
\&        $ chown root.root /tmp/foo
\&        ls -l /tmp/foo
\&        -r--r--r--    1 root     root            0 Apr 12 18:25 /tmp/foo
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBchroot\fR" 4
.IX Item "chroot"
chroot \s-1NEWROOT\s0 [\s-1COMMAND\s0...]
.Sp
Run \s-1COMMAND\s0 with root directory set to \s-1NEWROOT\s0.
.Sp
Example:
.Sp
.Vb 6
\&        $ ls -l /bin/ls
\&        lrwxrwxrwx    1 root     root          12 Apr 13 00:46 /bin/ls -> /BusyBox
\&        $ mount /dev/hdc1 /mnt -t minix
\&        $ chroot /mnt
\&        $ ls -l /bin/ls
\&        -rwxr-xr-x    1 root     root        40816 Feb  5 07:45 /bin/ls*
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBchvt\fR" 4
.IX Item "chvt"
chvt N
.Sp
Changes the foreground virtual terminal to /dev/ttyN
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBclear\fR" 4
.IX Item "clear"
clear 	
.Sp
Clear screen.
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBcmp\fR" 4
.IX Item "cmp"
cmp [\s-1OPTION\s0]... \s-1FILE1\s0 [\s-1FILE2\s0]
.Sp
Compare files.
.Sp
Options:
.Sp
.Vb 3
\&        -l      Write the byte numbers (decimal) and values (octal)
\&                  for all differing bytes.
\&        -s      quiet mode - do not print
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBcp\fR" 4
.IX Item "cp"
cp [\s-1OPTION\s0]... \s-1SOURCE\s0 \s-1DEST\s0
.Sp
Copies \s-1SOURCE\s0 to \s-1DEST\s0, or multiple \s-1SOURCE\s0(s) to \s-1DIRECTORY\s0.
.Sp
.Vb 5
\&        -a      Same as -dpR
\&        -d      Preserves links
\&        -p      Preserves file attributes if possible
\&        -f      force (implied; ignored) - always set
\&        -R      Copies directories recursively
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBcpio\fR" 4
.IX Item "cpio"
cpio \-[dimtuv][F cpiofile]
.Sp
Extract or list files from a cpio archive
Main operation mode:
.Sp
.Vb 6
\&        d               make leading directories
\&        i               extract
\&        m               preserve mtime
\&        t               list
\&        u               unconditional overwrite
\&        F               input from file
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBcrond\fR" 4
.IX Item "crond"
crond \fB\-d\fR[#] \fB\-c\fR <crondir> \fB\-f\fR \fB\-b\fR
.Sp
.Vb 8
\&        -d [#] -l [#] -S -L logfile -f -b -c dir
\&        -d num  debug level
\&        -l num  log level (8 - default)
\&        -S      log to syslod (defualt)
\&        -L file log to file
\&        -f      run in fordeground
\&        -b      run in background (default)
\&        -c dir  working dir
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBcrontab\fR" 4
.IX Item "crontab"
crontab crontab [\fB\-c\fR dir] {file|\-}|[\fB\-u\fR|\fB\-l\fR|\fB\-e\fR|\fB\-d\fR user]
.Sp
.Vb 7
\&        file <opts>  replace crontab from file
\&        -    <opts>  replace crontab from stdin
\&        -u user      specify user
\&        -l [user]    list crontab for user
\&        -e [user]    edit crontab for user
\&        -d [user]    delete crontab for user
\&        -c dir       specify crontab directory
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBcut\fR" 4
.IX Item "cut"
cut [\s-1OPTION\s0]... [\s-1FILE\s0]...
.Sp
Prints selected fields from each input \s-1FILE\s0 to standard output.
.Sp
Options:
.Sp
.Vb 6
\&        -b LIST         Output only bytes from LIST
\&        -c LIST         Output only characters from LIST
\&        -d CHAR         Use CHAR instead of tab as the field delimiter
\&        -s              Output only the lines containing delimiter
\&        -f N            Print only these fields
\&        -n              Ignored
.Ve
.Sp
Example:
.Sp
.Vb 4
\&        $ echo "Hello world" | cut -f 1 -d ' '
\&        Hello
\&        $ echo "Hello world" | cut -f 2 -d ' '
\&        world
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBdate\fR" 4
.IX Item "date"
date [\s-1OPTION\s0]... [+FORMAT]
.Sp
Displays the current time in the given \s-1FORMAT\s0, or sets the system date.
.Sp
Options:
.Sp
.Vb 8
\&        -R              Outputs RFC-822 compliant date string
\&        -d STRING       Displays time described by STRING, not `now'
\&        -I[TIMESPEC]    Outputs an ISO-8601 compliant date/time string.
\&                        TIMESPEC=`date' (or missing) for date only,
\&                        `hours', `minutes', or `seconds' for date and,
\&                        time to the indicated precision.
\&        -s              Sets time described by STRING
\&        -u              Prints or sets Coordinated Universal Time
.Ve
.Sp
Example:
.Sp
.Vb 2
\&        $ date
\&        Wed Apr 12 18:52:41 MDT 2000
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBdc\fR" 4
.IX Item "dc"
dc expression ...
.Sp
This is a Tiny \s-1RPN\s0 calculator that understands the
following operations: +, \-, /, *, and, or, not, eor.
i.e., 'dc 2 2 add' \-> 4, and 'dc 8 8 \e* 2 2 + /' \-> 16p \- Prints the value on the top of the stack, without altering the stack.
f \- Prints the entire contents of the stack without altering anything.
o \- Pops the value off the top of the stack and uses it to set the output radix.
.Sp
.Vb 1
\&    Only 10 and 16 are supported.
.Ve
.Sp
Example:
.Sp
.Vb 10
\&        $ dc 2 2 +
\&        4
\&        $ dc 8 8 * 2 2 + /
\&        16
\&        $ dc 0 1 and
\&        0
\&        $ dc 0 1 or
\&        1
\&        $ echo 72 9 div 8 mul | dc
\&        64
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBdd\fR" 4
.IX Item "dd"
dd [if=FILE] [of=FILE] [bs=N] [count=N] [skip=N]
	  [seek=N] [conv=notrunc|noerror|sync]
.Sp
Copy a file, converting and formatting according to options
.Sp
.Vb 9
\&        if=FILE         read from FILE instead of stdin
\&        of=FILE         write to FILE instead of stdout
\&        bs=N            read and write N bytes at a time
\&        count=N         copy only N input blocks
\&        skip=N          skip N input blocks
\&        seek=N          skip N output blocks
\&        conv=notrunc    don't truncate output file
\&        conv=noerror    continue after read errors
\&        conv=sync       pad blocks with zeros
.Ve
.Sp
Numbers may be suffixed by c (x1), w (x2), b (x512), kD (x1000), k (x1024),
\&\s-1MD\s0 (x1000000), M (x1048576), \s-1GD\s0 (x1000000000) or G (x1073741824).
.Sp
Example:
.Sp
.Vb 3
\&        $ dd if=/dev/zero of=/dev/ram1 bs=1M count=4
\&        4+0 records in
\&        4+0 records out
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBdeallocvt\fR" 4
.IX Item "deallocvt"
deallocvt N
.Sp
Deallocate unused virtual terminal /dev/ttyN
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBdelgroup\fR" 4
.IX Item "delgroup"
delgroup \s-1GROUP\s0
.Sp
Deletes group \s-1GROUP\s0 from the system
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBdeluser\fR" 4
.IX Item "deluser"
deluser \s-1USER\s0
.Sp
Deletes user \s-1USER\s0 from the system
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBdf\fR" 4
.IX Item "df"
df [\fB\-hmk\fR] [\s-1FILESYSTEM\s0 ...]
.Sp
Print the filesystem space used and space available.
.Sp
Options:
.Sp
.Vb 3
\&        -h      print sizes in human readable format (e.g., 1K 243M 2G )
\&        -m      print sizes in megabytes
\&        -k      print sizes in kilobytes(default)
.Ve
.Sp
Example:
.Sp
.Vb 7
\&        $ df
\&        Filesystem           1k-blocks      Used Available Use% Mounted on
\&        /dev/sda3              8690864   8553540    137324  98% /
\&        /dev/sda1                64216     36364     27852  57% /boot
\&        $ df /dev/sda3
\&        Filesystem           1k-blocks      Used Available Use% Mounted on
\&        /dev/sda3              8690864   8553540    137324  98% /
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBdirname\fR" 4
.IX Item "dirname"
dirname [\s-1FILENAME\s0 ...]
.Sp
Strips non-directory suffix from \s-1FILENAME\s0
.Sp
Example:
.Sp
.Vb 4
\&        $ dirname /tmp/foo
\&        /tmp
\&        $ dirname /tmp/foo/
\&        /tmp
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBdmesg\fR" 4
.IX Item "dmesg"
dmesg [\fB\-c\fR] [\fB\-n\fR \s-1LEVEL\s0] [\fB\-s\fR \s-1SIZE\s0]
.Sp
Prints or controls the kernel ring buffer
.Sp
Options:
.Sp
.Vb 3
\&        -c              Clears the ring buffer's contents after printing
\&        -n LEVEL        Sets console logging level
\&        -s SIZE         Use a buffer of size SIZE
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBdos2unix\fR" 4
.IX Item "dos2unix"
dos2unix [option] [\s-1FILE\s0]
.Sp
Converts \s-1FILE\s0 from dos format to unix format.  When no option
is given, the input is converted to the opposite output format.
When no file is given, uses stdin for input and stdout for output.
.Sp
Options:
.Sp
.Vb 2
\&        -u      output will be in UNIX format
\&        -d      output will be in DOS format
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBdpkg\fR" 4
.IX Item "dpkg"
dpkg \fB\-i\fR package_file
[\fB\-CPru\fR] package_name
.Sp
.Vb 5
\&        -i      Install the package
\&        -C      Configure an unpackaged package
\&        -P      Purge all files of a package
\&        -r      Remove all but the configuration files for a package
\&        -u      Unpack a package, but dont configure it
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBdpkg_deb\fR" 4
.IX Item "dpkg_deb"
dpkg_deb [\fB\-cefItxX\fR] \s-1FILE\s0 [argument]
.Sp
Perform actions on debian packages (.debs)
.Sp
Options:
.Sp
.Vb 7
\&        -c      List contents of filesystem tree
\&        -e      Extract control files to [argument] directory
\&        -f      Display control field name starting with [argument]
\&        -I      Display the control filenamed [argument]
\&        -t      Extract filesystem tree to stdout in tar format
\&        -x      Extract packages filesystem tree to directory
\&        -X      Verbose extract
.Ve
.Sp
Example:
.Sp
.Vb 1
\&        $ dpkg-deb -X ./busybox_0.48-1_i386.deb /tmp
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBdu\fR" 4
.IX Item "du"
du [\fB\-aHLdclsxhmk\fR] [\s-1FILE\s0]...
.Sp
Summarizes disk space used for each \s-1FILE\s0 and/or directory.
Disk space is printed in units of 1024 bytes.
.Sp
Options:
.Sp
.Vb 11
\&        -a      show sizes of files in addition to directories
\&        -H      follow symbolic links that are FILE command line args
\&        -L      follow all symbolic links encountered
\&        -d N    limit output to directories (and files with -a) of depth < N
\&        -c      output a grand total
\&        -l      count sizes many times if hard linked
\&        -s      display only a total for each argument
\&        -x      skip directories on different filesystems
\&        -h      print sizes in human readable format (e.g., 1K 243M 2G )
\&        -m      print sizes in megabytes
\&        -k      print sizes in kilobytes(default)
.Ve
.Sp
Example:
.Sp
.Vb 11
\&        $ du
\&        16      ./CVS
\&        12      ./kernel-patches/CVS
\&        80      ./kernel-patches
\&        12      ./tests/CVS
\&        36      ./tests
\&        12      ./scripts/CVS
\&        16      ./scripts
\&        12      ./docs/CVS
\&        104     ./docs
\&        2417    .
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBdumpkmap\fR" 4
.IX Item "dumpkmap"
dumpkmap > keymap
.Sp
Prints out a binary keyboard translation table to standard output.
.Sp
Example:
.Sp
.Vb 1
\&        $ dumpkmap > keymap
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBdumpleases\fR" 4
.IX Item "dumpleases"
dumpleases [\fB\-r\fR|\fB\-a\fR] [\fB\-f\fR \s-1LEASEFILE\s0]
.Sp
.Vb 3
\&        -f,     --file=FILENAME Leases file to load
\&        -r,     --remaining     Interepret lease times as time remaing
\&        -a,     --absolute      Interepret lease times as expire time
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBecho\fR" 4
.IX Item "echo"
echo [\fB\-neE\fR] [\s-1ARG\s0 ...]
.Sp
Prints the specified ARGs to stdout
.Sp
Options:
.Sp
.Vb 3
\&        -n      suppress trailing newline
\&        -e      interpret backslash-escaped characters (i.e., \et=tab)
\&        -E      disable interpretation of backslash-escaped characters
.Ve
.Sp
Example:
.Sp
.Vb 8
\&        $ echo "Erik is cool"
\&        Erik is cool
\&        $  echo -e "Erik\enis\encool"
\&        Erik
\&        is
\&        cool
\&        $ echo "Erik\enis\encool"
\&        Erik\enis\encool
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBenv\fR" 4
.IX Item "env"
env [\fB\-iu\fR] [\-] [name=value]... [command]
.Sp
Prints the current environment or runs a program after setting
up the specified environment.
.Sp
Options:
.Sp
.Vb 2
\&        -, -i   start with an empty environment
\&        -u      remove variable from the environment
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBexpr\fR" 4
.IX Item "expr"
expr \s-1EXPRESSION\s0
.Sp
Prints the value of \s-1EXPRESSION\s0 to standard output.
.Sp
\&\s-1EXPRESSION\s0 may be:
.Sp
.Vb 23
\&        ARG1 |  ARG2    ARG1 if it is neither null nor 0, otherwise ARG2
\&        ARG1 &  ARG2    ARG1 if neither argument is null or 0, otherwise 0
\&        ARG1 <  ARG2    ARG1 is less than ARG2
\&        ARG1 <= ARG2    ARG1 is less than or equal to ARG2
\&        ARG1 =  ARG2    ARG1 is equal to ARG2
\&        ARG1 != ARG2    ARG1 is unequal to ARG2
\&        ARG1 >= ARG2    ARG1 is greater than or equal to ARG2
\&        ARG1 >  ARG2    ARG1 is greater than ARG2
\&        ARG1 +  ARG2    arithmetic sum of ARG1 and ARG2
\&        ARG1 -  ARG2    arithmetic difference of ARG1 and ARG2
\&        ARG1 *  ARG2    arithmetic product of ARG1 and ARG2
\&        ARG1 /  ARG2    arithmetic quotient of ARG1 divided by ARG2
\&        ARG1 %  ARG2    arithmetic remainder of ARG1 divided by ARG2
\&        STRING : REGEXP             anchored pattern match of REGEXP in STRING
\&        match STRING REGEXP         same as STRING : REGEXP
\&        substr STRING POS LENGTH    substring of STRING, POS counted from 1
\&        index STRING CHARS          index in STRING where any CHARS is found,
\&                                    or 0
\&        length STRING               length of STRING
\&        quote TOKEN                 interpret TOKEN as a string, even if
\&                                    it is a keyword like `match' or an
\&                                    operator like `/'
\&        ( EXPRESSION )              value of EXPRESSION
.Ve
.Sp
Beware that many operators need to be escaped or quoted for shells.
Comparisons are arithmetic if both ARGs are numbers, else
lexicographical.  Pattern matches return the string matched between 
\&\e( and \e) or null; if \e( and \e) are not used, they return the number 
of characters matched or 0.
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBfalse\fR" 4
.IX Item "false"
false 	
.Sp
Return an exit code of \s-1FALSE\s0 (1).
.Sp
Example:
.Sp
.Vb 3
\&        $ false
\&        $ echo $?
\&        1
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBfbset\fR" 4
.IX Item "fbset"
fbset [options] [mode]
.Sp
Show and modify frame buffer settings
.Sp
Example:
.Sp
.Vb 8
\&        $ fbset
\&        mode "1024x768-76"
\&                # D: 78.653 MHz, H: 59.949 kHz, V: 75.694 Hz
\&                geometry 1024 768 1024 768 16
\&                timings 12714 128 32 16 4 128 4
\&                accel false
\&                rgba 5/11,6/5,5/0,0/0
\&        endmode
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBfdflush\fR" 4
.IX Item "fdflush"
fdflush \s-1DEVICE\s0
.Sp
Forces floppy disk drive to detect disk change
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBfdformat\fR" 4
.IX Item "fdformat"
fdformat [\fB\-n\fR] \s-1DEVICE\s0
.Sp
Low-level formats a floppy disk
.Sp
Options:
.Sp
.Vb 1
\&        -n      Don't verify after format
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBfdisk\fR" 4
.IX Item "fdisk"
fdisk [\fB\-l\fR] [\fB\-v\fR] [\fB\-b\fR \s-1SSZ\s0] [\fB\-u\fR] \s-1DISK\s0
.Sp
Change partition table
Options:
\&\fB\-l\fR  List partition table(s)
\&\fB\-u\fR  Give Start and End in sector (instead of cylinder) units
\&\fB\-s\fR \s-1PARTITION\s0  Give partition size(s) in blocks
\&\fB\-b\fR 2048: (for certain \s-1MO\s0 disks) use 2048\-byte sectors
\&\fB\-v\fR  Give fdisk version
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBfind\fR" 4
.IX Item "find"
find [\s-1PATH\s0...] [\s-1EXPRESSION\s0]
.Sp
Search for files in a directory hierarchy.  The default \s-1PATH\s0 is
the current directory; default \s-1EXPRESSION\s0 is '\fB\-print\fR'
.Sp
\&\s-1EXPRESSION\s0 may consist of:
.Sp
.Vb 3
\&        -follow         Dereference symbolic links.
\&        -name PATTERN   File name (leading directories removed) matches PATTERN.
\&        -print          Print (default and assumed).
.Ve
.Sp
.Vb 7
\&        -type X         Filetype matches X (where X is one of: f,d,l,b,c,...)
\&        -perm PERMS     Permissions match any of (+NNN); all of (-NNN);
\&                        or exactly (NNN)
\&        -mtime TIME     Modified time is greater than (+N); less than (-N);
\&                        or exactly (N) days
\&        -newer FILE     Modified time is more recent than FILE's
\&        -inum N         File has inode number N
.Ve
.Sp
Example:
.Sp
.Vb 2
\&        $ find / -name /etc/passwd
\&        /etc/passwd
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBfold\fR" 4
.IX Item "fold"
fold [bsw] [\s-1FILE\s0]
.Sp
Wrap input lines in each \s-1FILE\s0 (standard input by default), writing to
standard output.
.Sp
Options:
.Sp
.Vb 3
\&        -b      count bytes rather than columns
\&        -s      break at spaces
\&        -w      use WIDTH columns instead of 80
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBfree\fR" 4
.IX Item "free"
free 	
.Sp
Displays the amount of free and used system memory
.Sp
Example:
.Sp
.Vb 5
\&        $ free
\&                      total         used         free       shared      buffers
\&          Mem:       257628       248724         8904        59644        93124
\&         Swap:       128516         8404       120112
\&        Total:       386144       257128       129016
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBfreeramdisk\fR" 4
.IX Item "freeramdisk"
freeramdisk \s-1DEVICE\s0
.Sp
Frees all memory used by the specified ramdisk.
.Sp
Example:
.Sp
.Vb 1
\&        $ freeramdisk /dev/ram2
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBfsck_minix\fR" 4
.IX Item "fsck_minix"
fsck_minix [\fB\-larvsmf\fR] /dev/name
.Sp
Performs a consistency check for \s-1MINIX\s0 filesystems.
.Sp
Options:
.Sp
.Vb 7
\&        -l      Lists all filenames
\&        -r      Perform interactive repairs
\&        -a      Perform automatic repairs
\&        -v      verbose
\&        -s      Outputs super-block information
\&        -m      Activates MINIX-like "mode not cleared" warnings
\&        -f      Force file system check.
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBftpget\fR" 4
.IX Item "ftpget"
ftpget [options] remote-host local-directory remote-file
.Sp
Retrieve a remote file via \s-1FTP\s0.
.Sp
Options:
.Sp
.Vb 5
\&        -c, --continue         Continue a previous transfer
\&        -v, --verbose          Verbose
\&        -u, --username         Username to be used
\&        -p, --password         Password to be used
\&        -P, --port             Port number to be used
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBftpput\fR" 4
.IX Item "ftpput"
ftpput [options] remote-host remote-directory local-file
.Sp
Store a local file on a remote machine via \s-1FTP\s0.
.Sp
Options:
.Sp
.Vb 4
\&        -v, --verbose          Verbose
\&        -u, --username         Username to be used
\&        -p, --password         Password to be used
\&        -P, --port             Port number to be used
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBgetopt\fR" 4
.IX Item "getopt"
getopt [\s-1OPTIONS\s0]...
.Sp
Parse command options
.Sp
.Vb 9
\&        -a, --alternative               Allow long options starting with single -
\&        -l, --longoptions=longopts      Long options to be recognized
\&        -n, --name=progname             The name under which errors are reported
\&        -o, --options=optstring Short options to be recognized
\&        -q, --quiet                     Disable error reporting by getopt(3)
\&        -Q, --quiet-output              No normal output
\&        -s, --shell=shell               Set shell quoting conventions
\&        -T, --test                      Test for getopt(1) version
\&        -u, --unqote                    Do not quote the output
.Ve
.Sp
Example:
.Sp
.Vb 19
\&        $ cat getopt.test
\&        #!/bin/sh
\&        GETOPT=`getopt -o ab:c:: --long a-long,b-long:,c-long:: \e
\&               -n 'example.busybox' -- "$@"`
\&        if [ $? != 0 ] ; then  exit 1 ; fi
\&        eval set -- "$GETOPT"
\&        while true ; do
\&         case $1 in
\&           -a|--a-long) echo "Option a" ; shift ;;
\&           -b|--b-long) echo "Option b, argument `$2'" ; shift 2 ;;
\&           -c|--c-long)
\&             case "$2" in
\&               "") echo "Option c, no argument"; shift 2 ;;
\&               *)  echo "Option c, argument `$2'" ; shift 2 ;;
\&             esac ;;
\&           --) shift ; break ;;
\&           *) echo "Internal error!" ; exit 1 ;;
\&         esac
\&        done
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBgetty\fR" 4
.IX Item "getty"
getty getty [\s-1OPTIONS\s0]... baud_rate,... line [termtype]
.Sp
Opens a tty, prompts for a login name, then invokes /bin/login
.Sp
Options:
.Sp
.Vb 11
\&        -h              Enable hardware (RTS/CTS) flow control.
\&        -i              Do not display /etc/issue before running login.
\&        -L              Local line, so do not do carrier detect.
\&        -m              Get baud rate from modem's CONNECT status message.
\&        -w              Wait for a CR or LF before sending /etc/issue.
\&        -n              Do not prompt the user for a login name.
\&        -f issue_file   Display issue_file instead of /etc/issue.
\&        -l login_app    Invoke login_app instead of /bin/login.
\&        -t timeout      Terminate after timeout if no username is read.
\&        -I initstring   Sets the init string to send before anything else.
\&        -H login_host   Log login_host into the utmp file as the hostname.
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBgrep\fR" 4
.IX Item "grep"
grep [\fB\-ihHnqvs\fR] \s-1PATTERN\s0 [FILEs...]
.Sp
Search for \s-1PATTERN\s0 in each \s-1FILE\s0 or standard input.
.Sp
Options:
.Sp
.Vb 8
\&        -H      prefix output lines with filename where match was found
\&        -h      suppress the prefixing filename on output
\&        -i      ignore case distinctions
\&        -l      list names of files that match
\&        -n      print line number with output lines
\&        -q      be quiet. Returns 0 if result was found, 1 otherwise
\&        -v      select non-matching lines
\&        -s      suppress file open/read error messages
.Ve
.Sp
Example:
.Sp
.Vb 4
\&        $ grep root /etc/passwd
\&        root:x:0:0:root:/root:/bin/bash
\&        $ grep ^[rR]oo. /etc/passwd
\&        root:x:0:0:root:/root:/bin/bash
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBgunzip\fR" 4
.IX Item "gunzip"
gunzip [\s-1OPTION\s0]... \s-1FILE\s0
.Sp
Uncompress \s-1FILE\s0 (or standard input if \s-1FILE\s0 is '\-').
.Sp
Options:
.Sp
.Vb 2
\&        -c      Write output to standard output
\&        -t      Test compressed file integrity
.Ve
.Sp
Example:
.Sp
.Vb 5
\&        $ ls -la /tmp/BusyBox*
\&        -rw-rw-r--    1 andersen andersen   557009 Apr 11 10:55 /tmp/BusyBox-0.43.tar.gz
\&        $ gunzip /tmp/BusyBox-0.43.tar.gz
\&        $ ls -la /tmp/BusyBox*
\&        -rw-rw-r--    1 andersen andersen  1761280 Apr 14 17:47 /tmp/BusyBox-0.43.tar
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBgzip\fR" 4
.IX Item "gzip"
gzip [\s-1OPTION\s0]... [\s-1FILE\s0]...
.Sp
Compress \s-1FILE\s0(s) with maximum compression.
When \s-1FILE\s0 is '\-' or unspecified, reads standard input.  Implies \fB\-c\fR.
.Sp
Options:
.Sp
.Vb 2
\&        -c      Write output to standard output instead of FILE.gz
\&        -d      decompress
.Ve
.Sp
Example:
.Sp
.Vb 5
\&        $ ls -la /tmp/busybox*
\&        -rw-rw-r--    1 andersen andersen  1761280 Apr 14 17:47 /tmp/busybox.tar
\&        $ gzip /tmp/busybox.tar
\&        $ ls -la /tmp/busybox*
\&        -rw-rw-r--    1 andersen andersen   554058 Apr 14 17:49 /tmp/busybox.tar.gz
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBhalt\fR" 4
.IX Item "halt"
halt 	
.Sp
Halt the system.
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBhdparm\fR" 4
.IX Item "hdparm"
hdparm [options] [device] ..
.Sp
Options: \fB\-a\fR   get/set fs readahead
.Sp
.Vb 39
\& -A   set drive read-lookahead flag (0/1)
\& -b   get/set bus state (0 == off, 1 == on, 2 == tristate)
\& -B   set Advanced Power Management setting (1-255)
\& -c   get/set IDE 32-bit IO setting
\& -C   check IDE power mode status
\& -d   get/set using_dma flag
\& -D   enable/disable drive defect-mgmt
\& -f   flush buffer cache for device on exit
\& -g   display drive geometry
\& -h   display terse usage information
\& -i   display drive identification
\& -I   detailed/current information directly from drive
\& -Istdin  similar to -I, but wants /proc/ide/*/hd?/identify as input
\& -k   get/set keep_settings_over_reset flag (0/1)
\& -K   set drive keep_features_over_reset flag (0/1)
\& -L   set drive doorlock (0/1) (removable harddisks only)
\& -m   get/set multiple sector count
\& -n   get/set ignore-write-errors flag (0/1)
\& -p   set PIO mode on IDE interface chipset (0,1,2,3,4,...)
\& -P   set drive prefetch count
\& -q   change next setting quietly
\& -Q   get/set DMA tagged-queuing depth (if supported)
\& -r   get/set readonly flag (DANGEROUS to set)
\& -R   register an IDE interface (DANGEROUS)
\& -S   set standby (spindown) timeout
\& -t   perform device read timings
\& -T   perform cache read timings
\& -u   get/set unmaskirq flag (0/1)
\& -U   un-register an IDE interface (DANGEROUS)
\& -v   defaults; same as -mcudkrag for IDE drives
\& -V   display program version and exit immediately
\& -w   perform device reset (DANGEROUS)
\& -W   set drive write-caching flag (0/1) (DANGEROUS)
\& -x   tristate device for hotswap (0/1) (DANGEROUS)
\& -X   set IDE xfer mode (DANGEROUS)
\& -y   put IDE drive in standby mode
\& -Y   put IDE drive to sleep
\& -Z   disable Seagate auto-powersaving mode
\& -z   re-read partition table
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBhead\fR" 4
.IX Item "head"
head [\s-1OPTION\s0]... [\s-1FILE\s0]...
.Sp
Print first 10 lines of each \s-1FILE\s0 to standard output.
With more than one \s-1FILE\s0, precede each with a header giving the
file name. With no \s-1FILE\s0, or when \s-1FILE\s0 is \-, read standard input.
.Sp
Options:
.Sp
.Vb 4
\&        -n NUM          Print first NUM lines instead of first 10
\&        -c NUM          output the first NUM bytes
\&        -q              never output headers giving file names
\&        -v              always output headers giving file names
.Ve
.Sp
Example:
.Sp
.Vb 3
\&        $ head -n 2 /etc/passwd
\&        root:x:0:0:root:/root:/bin/bash
\&        daemon:x:1:1:daemon:/usr/sbin:/bin/sh
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBhexdump\fR" 4
.IX Item "hexdump"
hexdump [\-[bcdefnosvx]] [\s-1OPTION\s0] \s-1FILE\s0
.Sp
The hexdump utility is a filter which displays the specified files,
or the standard input, if no files are specified, in a user specified
format
.Sp
.Vb 10
\&        -b              One-byte octal display
\&        -c              One-byte character display
\&        -d              Two-byte decimal display
\&        -e FORMAT STRING
\&        -f FORMAT FILE
\&        -n LENGTH       Interpret only length bytes of input
\&        -o              Two-byte octal display
\&        -s OFFSET       Skip offset byte
\&        -v              display all input data
\&        -x              Two-byte hexadecimal display
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBhostid\fR" 4
.IX Item "hostid"
hostid 	
.Sp
Print out a unique 32\-bit identifier for the machine.
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBhostname\fR" 4
.IX Item "hostname"
hostname [\s-1OPTION\s0] {hostname | \fB\-F\fR \s-1FILE\s0}
.Sp
Get or set the hostname or \s-1DNS\s0 domain name. If a hostname is given
(or \s-1FILE\s0 with the \fB\-F\fR parameter), the host name will be set.
.Sp
Options:
.Sp
.Vb 5
\&        -s      Short
\&        -i      Addresses for the hostname
\&        -d      DNS domain name
\&        -f      Fully qualified domain name
\&        -F FILE Use the contents of FILE to specify the hostname
.Ve
.Sp
Example:
.Sp
.Vb 2
\&        $ hostname
\&        sage
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBhttpd\fR" 4
.IX Item "httpd"
httpd [\fB\-c\fR <conf file>] [\fB\-p\fR <port>] [\fB\-u\fR user] [\fB\-r\fR <realm>] [\fB\-m\fR pass] [\fB\-d\fR/\fB\-e\fR <string>]
.Sp
Listens for incoming http server requests.
Options:
.Sp
.Vb 7
\&        -c FILE Specifies configuration file. (default httpd.conf)
\&        -p PORT Server port (default 80)
\&        -u USER Set uid to USER after listening privilegies port
\&        -r REALM        Authentication Realm for Basic Authentication
\&        -m PASS Crypt PASS with md5 algorithm
\&        -e STRING       Html encode STRING
\&        -d STRING       URL decode STRING
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBhwclock\fR" 4
.IX Item "hwclock"
hwclock [\fB\-r\fR|\-\fB\-show\fR] [\fB\-s\fR|\-\fB\-hctosys\fR] [\fB\-w\fR|\-\fB\-systohc\fR] [\fB\-l\fR|\-\fB\-localtime\fR] [\fB\-u\fR|\-\fB\-utc\fR]
.Sp
Query and set the hardware clock (\s-1RTC\s0)
.Sp
Options:
.Sp
.Vb 5
\&        -r      read hardware clock and print result
\&        -s      set the system time from the hardware clock
\&        -w      set the hardware clock to the current system time
\&        -u      the hardware clock is kept in coordinated universal time
\&        -l      the hardware clock is kept in local time
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBid\fR" 4
.IX Item "id"
id [\s-1OPTIONS\s0]... [\s-1USERNAME\s0]
.Sp
Print information for \s-1USERNAME\s0 or the current user
.Sp
Options:
.Sp
.Vb 4
\&        -g      prints only the group ID
\&        -u      prints only the user ID
\&        -c      prints only the security context
\&",      B<-n>   print a name instead of a number (with for B<-ug>)
.Ve
.Sp
.Vb 1
\&        -r      prints the real user ID instead of the effective ID (with -ug)
.Ve
.Sp
Example:
.Sp
.Vb 2
\&        $ id
\&        uid=1000(andersen) gid=1000(andersen)
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBifconfig\fR" 4
.IX Item "ifconfig"
ifconfig [\fB\-a\fR] <interface> [<address>]
.Sp
configure a network interface
.Sp
Options:
[add <address>[/<prefixlen>]]
[del <address>[/<prefixlen>]]
.Sp
.Vb 8
\&        [[-]broadcast [<address>]]  [[-]pointopoint [<address>]]
\&        [netmask <address>]  [dstaddr <address>]
\&        [outfill <NN>] [keepalive <NN>]
\&        [hw ether <address>]  [metric <NN>]  [mtu <NN>]
\&        [[-]trailers]  [[-]arp]  [[-]allmulti]
\&        [multicast]  [[-]promisc]  [txqueuelen <NN>]  [[-]dynamic]
\&        [mem_start <NN>]  [io_addr <NN>]  [irq <NN>]
\&        [up|down] ...
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBifdown\fR" 4
.IX Item "ifdown"
ifdown <\fB\-ahinv\fR> <ifaces...>
.Sp
Usage: ifdown <options> <ifaces...>
.Sp
Options:
.Sp
.Vb 8
\&        -h      this help
\&        -a      de/configure all interfaces automatically
\&        -i FILE use FILE for interface definitions
\&        -n      print out what would happen, but don't do it
\&                (note that this option doesn't disable mappings)
\&        -v      print out what would happen before doing it
\&        -m      don't run any mappings
\&        -f      force de/configuration
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBifup\fR" 4
.IX Item "ifup"
ifup <\fB\-ahinv\fR> <ifaces...>
.Sp
Usage: ifup <options> <ifaces...>
.Sp
Options:
.Sp
.Vb 8
\&        -h      this help
\&        -a      de/configure all interfaces automatically
\&        -i FILE use FILE for interface definitions
\&        -n      print out what would happen, but don't do it
\&                        (note that this option doesn't disable mappings)
\&        -v      print out what would happen before doing it
\&        -m      don't run any mappings
\&        -f      force de/configuration
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBinetd\fR" 4
.IX Item "inetd"
inetd [\fB\-q\fR len] [conf]
.Sp
Usage: [\fB\-q\fR len] [conf]
.Sp
Option:
.Sp
.Vb 2
\&        -q      Sets the size of the socket listen queue to
\&the specified value. Default is 128.
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBinit\fR" 4
.IX Item "init"
init 	
.Sp
Init is the parent of all processes.
.Sp
This version of init is designed to be run only by the kernel.
.Sp
BusyBox init doesn't support multiple runlevels.  The runlevels field of
the /etc/inittab file is completely ignored by BusyBox init. If you want 
runlevels, use sysvinit.
.Sp
BusyBox init works just fine without an inittab.  If no inittab is found, 
it has the following default behavior:
.Sp
.Vb 6
\&        ::sysinit:/etc/init.d/rcS
\&        ::askfirst:/bin/sh
\&        ::ctrlaltdel:/sbin/reboot
\&        ::shutdown:/sbin/swapoff -a
\&        ::shutdown:/bin/umount -a -r
\&        ::restart:/sbin/init
.Ve
.Sp
if it detects that /dev/console is _not_ a serial console, it will also run:
.Sp
.Vb 3
\&        tty2::askfirst:/bin/sh
\&        tty3::askfirst:/bin/sh
\&        tty4::askfirst:/bin/sh
.Ve
.Sp
If you choose to use an /etc/inittab file, the inittab entry format is as follows:
.Sp
.Vb 1
\&        <id>:<runlevels>:<action>:<process>
.Ve
.Sp
.Vb 1
\&        <id>:
.Ve
.Sp
.Vb 10
\&                WARNING: This field has a non-traditional meaning for BusyBox init!
\&                The id field is used by BusyBox init to specify the controlling tty for
\&                the specified process to run on.  The contents of this field are
\&                appended to "/dev/" and used as-is.  There is no need for this field to
\&                be unique, although if it isn't you may have strange results.  If this
\&                field is left blank, the controlling tty is set to the console.  Also
\&                note that if BusyBox detects that a serial console is in use, then only
\&                entries whose controlling tty is either the serial console or /dev/null
\&                will be run.  BusyBox init does nothing with utmp.  We don't need no
\&                stinkin' utmp.
.Ve
.Sp
.Vb 1
\&        <runlevels>:
.Ve
.Sp
.Vb 1
\&                The runlevels field is completely ignored.
.Ve
.Sp
.Vb 1
\&        <action>:
.Ve
.Sp
.Vb 2
\&                Valid actions include: sysinit, respawn, askfirst, wait, 
\&                once, restart, ctrlaltdel, and shutdown.
.Ve
.Sp
.Vb 3
\&                The available actions can be classified into two groups: actions
\&                that are run only once, and actions that are re-run when the specified
\&                process exits.
.Ve
.Sp
.Vb 1
\&                Run only-once actions:
.Ve
.Sp
.Vb 15
\&                        'sysinit' is the first item run on boot.  init waits until all
\&                        sysinit actions are completed before continuing.  Following the
\&                        completion of all sysinit actions, all 'wait' actions are run.
\&                        'wait' actions, like  'sysinit' actions, cause init to wait until
\&                        the specified task completes.  'once' actions are asynchronous,
\&                        therefore, init does not wait for them to complete.  'restart' is
\&                        the action taken to restart the init process.  By default this should
\&                        simply run /sbin/init, but can be a script which runs pivot_root or it
\&                        can do all sorts of other interesting things.  The 'ctrlaltdel' init
\&                        actions are run when the system detects that someone on the system
\&                       console has pressed the CTRL-ALT-DEL key combination.  Typically one
\&                       wants to run 'reboot' at this point to cause the system to reboot.
\&                        Finally the 'shutdown' action specifies the actions to taken when
\&                       init is told to reboot.  Unmounting filesystems and disabling swap
\&                       is a very good here
.Ve
.Sp
.Vb 1
\&                Run repeatedly actions:
.Ve
.Sp
.Vb 8
\&                        'respawn' actions are run after the 'once' actions.  When a process
\&                        started with a 'respawn' action exits, init automatically restarts
\&                        it.  Unlike sysvinit, BusyBox init does not stop processes from
\&                        respawning out of control.  The 'askfirst' actions acts just like
\&                        respawn, except that before running the specified process it
\&                        displays the line "Please press Enter to activate this console."
\&                        and then waits for the user to press enter before starting the
\&                        specified process.
.Ve
.Sp
.Vb 3
\&                Unrecognized actions (like initdefault) will cause init to emit an
\&                error message, and then go along with its business.  All actions are
\&                run in the order they appear in /etc/inittab.
.Ve
.Sp
.Vb 1
\&        <process>:
.Ve
.Sp
.Vb 1
\&                Specifies the process to be executed and it's command line.
.Ve
.Sp
Example /etc/inittab file:
.Sp
.Vb 3
\&        # This is run first except when booting in single-user mode.
\&        #
\&        ::sysinit:/etc/init.d/rcS
.Ve
.Sp
.Vb 8
\&        # /bin/sh invocations on selected ttys
\&        #
\&        # Start an "askfirst" shell on the console (whatever that may be)
\&        ::askfirst:-/bin/sh
\&        # Start an "askfirst" shell on /dev/tty2-4
\&        tty2::askfirst:-/bin/sh
\&        tty3::askfirst:-/bin/sh
\&        tty4::askfirst:-/bin/sh
.Ve
.Sp
.Vb 4
\&        # /sbin/getty invocations for selected ttys
\&        #
\&        tty4::respawn:/sbin/getty 38400 tty4
\&        tty5::respawn:/sbin/getty 38400 tty5
.Ve
.Sp
.Vb 7
\&        # Example of how to put a getty on a serial line (for a terminal)
\&        #
\&        #::respawn:/sbin/getty -L ttyS0 9600 vt100
\&        #::respawn:/sbin/getty -L ttyS1 9600 vt100
\&        #
\&        # Example how to put a getty on a modem line.
\&        #::respawn:/sbin/getty 57600 ttyS2
.Ve
.Sp
.Vb 2
\&        # Stuff to do when restarting the init process
\&        ::restart:/sbin/init
.Ve
.Sp
.Vb 4
\&        # Stuff to do before rebooting
\&        ::ctrlaltdel:/sbin/reboot
\&        ::shutdown:/bin/umount -a -r
\&        ::shutdown:/sbin/swapoff -a
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBinsmod\fR" 4
.IX Item "insmod"
insmod [\s-1OPTION\s0]... \s-1MODULE\s0 [symbol=value]...
.Sp
Loads the specified kernel modules into the kernel.
.Sp
Options:
.Sp
.Vb 5
\&        -f      Force module to load into the wrong kernel version.
\&        -k      Make module autoclean-able.
\&        -v      verbose output
\&        -L      Lock to prevent simultaneous loads of a module
\&        -m      Output load map to stdout       -x      do not export externs
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBinsmod_ng\fR" 4
.IX Item "insmod_ng"
insmod_ng \s-1MODULE\s0 [symbol=value]...
.Sp
Loads the specified kernel modules into the kernel.
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBip\fR" 4
.IX Item "ip"
ip [ \s-1OPTIONS\s0 ] { address | link | route | tunnel } { \s-1COMMAND\s0 | help }
.Sp
ip [ \s-1OPTIONS\s0 ] \s-1OBJECT\s0 { \s-1COMMAND\s0 | help }
where  \s-1OBJECT\s0 := { link | addr | route | tunnel }
\&\s-1OPTIONS\s0 := { \fB\-f\fR[amily] { inet | inet6 | link } | \fB\-o\fR[neline] }
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBipaddr\fR" 4
.IX Item "ipaddr"
ipaddr { {add|del} \s-1IFADDR\s0 dev \s-1STRING\s0 | {show|flush} [ dev \s-1STRING\s0 ] [ to \s-1PREFIX\s0 ] }
.Sp
ipaddr {add|del} \s-1IFADDR\s0 dev \s-1STRING\s0
ipaddr {show|flush} [ dev \s-1STRING\s0 ] [ scope SCOPE-ID ]
.Sp
.Vb 2
\&                    [ to PREFIX ] [ label PATTERN ]
\&IFADDR := PREFIX | ADDR peer PREFIX
.Ve
.Sp
.Vb 3
\&          [ broadcast ADDR ] [ anycast ADDR ]
\&          [ label STRING ] [ scope SCOPE-ID ]
\&SCOPE-ID := [ host | link | global | NUMBER ]
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBipcalc\fR" 4
.IX Item "ipcalc"
ipcalc 
.Sp
ipcalc provides a simple way to calculate \s-1IP\s0 information for
a host. The various options specify what information ipcalc
should display on standard out. Multiple options may be
specified.
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBiplink\fR" 4
.IX Item "iplink"
iplink 
.Sp
iplink set \s-1DEVICE\s0 { up | down | arp { on | off } |
.Sp
.Vb 3
\&                     dynamic { on | off } |
\&                     mtu MTU }
\&iplink show [ DEVICE ]
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBiproute\fR" 4
.IX Item "iproute"
iproute { list | flush | { add | del | change | append | replace | monitor } \s-1ROUTE\s0 }
.Sp
iproute { list | flush } \s-1SELECTOR\s0
iproute get \s-1ADDRESS\s0 [ from \s-1ADDRESS\s0 iif \s-1STRING\s0 ]
.Sp
.Vb 4
\&                     [ oif STRING ]  [ tos TOS ]
\&iproute { add | del | change | append | replace | monitor } ROUTE
\&SELECTOR := [ root PREFIX ] [ match PREFIX ] [ proto RTPROTO ]
\&ROUTE := [ TYPE ] PREFIX [ tos TOS ] [ proto RTPROTO ]
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBiptunnel\fR" 4
.IX Item "iptunnel"
iptunnel { add | change | del | show } [ \s-1NAME\s0 ] [ mode { ipip | gre | sit } ] [ remote \s-1ADDR\s0 ] [ local \s-1ADDR\s0 ] [ ttl \s-1TTL\s0 ]
.Sp
iptunnel { add | change | del | show } [ \s-1NAME\s0 ]
.Sp
.Vb 3
\&          [ mode { ipip | gre | sit } ] [ remote ADDR ] [ local ADDR ]
\&          [ [i|o]seq ] [ [i|o]key KEY ] [ [i|o]csum ]
\&          [ ttl TTL ] [ tos TOS ] [ [no]pmtudisc ] [ dev PHYS_DEV ]
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBkill\fR" 4
.IX Item "kill"
kill [\fB\-signal\fR] process-id [process\-id ...]
.Sp
Send a signal (default is \s-1SIGTERM\s0) to the specified process(es).
.Sp
Options:
.Sp
.Vb 1
\&        -l      List all signal names and numbers.
.Ve
.Sp
Example:
.Sp
.Vb 8
\&        $ ps | grep apache
\&        252 root     root     S [apache]
\&        263 www-data www-data S [apache]
\&        264 www-data www-data S [apache]
\&        265 www-data www-data S [apache]
\&        266 www-data www-data S [apache]
\&        267 www-data www-data S [apache]
\&        $ kill 252
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBkillall\fR" 4
.IX Item "killall"
killall [\fB\-signal\fR] process-name [process\-name ...]
.Sp
Send a signal (default is \s-1SIGTERM\s0) to the specified process(es).
.Sp
Options:
.Sp
.Vb 1
\&        -l      List all signal names and numbers.
.Ve
.Sp
Example:
.Sp
.Vb 1
\&        $ killall apache
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBklogd\fR" 4
.IX Item "klogd"
klogd [\fB\-c\fR n] [\fB\-n\fR]
.Sp
Kernel logger.
Options:
.Sp
.Vb 2
\&        -c n    Sets the default log level of console messages to n.
\&        -n      Run as a foreground process.
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBlash\fR" 4
.IX Item "lash"
lash [\s-1FILE\s0]...
or: sh \fB\-c\fR command [args]...
.Sp
The BusyBox LAme SHell (command interpreter)
.Sp
This command does not yet have proper documentation.
.Sp
Use lash just as you would use any other shell.  It properly handles pipes,
redirects, job control, can be used as the shell for scripts, and has a
sufficient set of builtins to do what is needed.  It does not (yet) support
Bourne Shell syntax.  If you need things like \*(L"if\-then\-else\*(R", \*(L"while\*(R", and such
use ash or bash.  If you just need a very simple and extremely small shell,
this will do the job.
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBlast\fR" 4
.IX Item "last"
last 	
.Sp
Shows listing of the last users that logged into the system
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBlength\fR" 4
.IX Item "length"
length \s-1STRING\s0
.Sp
Prints out the length of the specified \s-1STRING\s0.
.Sp
Example:
.Sp
.Vb 2
\&        $ length Hello
\&        5
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBln\fR" 4
.IX Item "ln"
ln [\s-1OPTION\s0] \s-1TARGET\s0... LINK_NAME|DIRECTORY
.Sp
Create a link named \s-1LINK_NAME\s0 or \s-1DIRECTORY\s0 to the specified \s-1TARGET\s0
.Sp
You may use '\-\-' to indicate that all following arguments are non\-options.
.Sp
Options:
.Sp
.Vb 3
\&        -s      make symbolic links instead of hard links
\&        -f      remove existing destination files
\&        -n      no dereference symlinks - treat like normal file
.Ve
.Sp
Example:
.Sp
.Vb 3
\&        $ ln -s BusyBox /tmp/ls
\&        $ ls -l /tmp/ls
\&        lrwxrwxrwx    1 root     root            7 Apr 12 18:39 ls -> BusyBox*
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBloadacm\fR" 4
.IX Item "loadacm"
loadacm < mapfile
.Sp
Loads an acm from standard input.
.Sp
Example:
.Sp
.Vb 1
\&        $ loadacm < /etc/i18n/acmname
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBloadfont\fR" 4
.IX Item "loadfont"
loadfont < font
.Sp
Loads a console font from standard input.
.Sp
Example:
.Sp
.Vb 1
\&        $ loadfont < /etc/i18n/fontname
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBloadkmap\fR" 4
.IX Item "loadkmap"
loadkmap < keymap
.Sp
Loads a binary keyboard translation table from standard input.
.Sp
Example:
.Sp
.Vb 1
\&        $ loadkmap < /etc/i18n/lang-keymap
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBlogger\fR" 4
.IX Item "logger"
logger [\s-1OPTION\s0]... [\s-1MESSAGE\s0]
.Sp
Write \s-1MESSAGE\s0 to the system log.  If \s-1MESSAGE\s0 is omitted, log stdin.
.Sp
Options:
.Sp
.Vb 4
\&        -s      Log to stderr as well as the system log.
\&        -t      Log using the specified tag (defaults to user name).
\&        -p      Enter the message with the specified priority.
\&                This may be numerical or a ``facility.level'' pair.
.Ve
.Sp
Example:
.Sp
.Vb 1
\&        $ logger "hello"
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBlogin\fR" 4
.IX Item "login"
login [\s-1OPTION\s0]... [username] [ENV=VAR ...]
.Sp
Begin a new session on the system
.Sp
Options:
.Sp
.Vb 3
\&        -f      Do not authenticate (user already authenticated)
\&        -h      Name of the remote host for this login.
\&        -p      Preserve environment.
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBlogname\fR" 4
.IX Item "logname"
logname 	
.Sp
Print the name of the current user.
.Sp
Example:
.Sp
.Vb 2
\&        $ logname
\&        root
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBlogread\fR" 4
.IX Item "logread"
logread         
.Sp
Shows the messages from syslogd (using circular buffer).
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBlosetup\fR" 4
.IX Item "losetup"
losetup [\s-1OPTION\s0]... \s-1LOOPDEVICE\s0 \s-1FILE\s0
or: losetup [\s-1OPTION\s0]... \fB\-d\fR \s-1LOOPDEVICE\s0
.Sp
Associate \s-1LOOPDEVICE\s0 with \s-1FILE\s0.
.Sp
Options:
.Sp
.Vb 2
\&        -d              Disassociate LOOPDEVICE.
\&        -o OFFSET       Start OFFSET bytes into FILE.
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBls\fR" 4
.IX Item "ls"
ls [\fB\-1AacCdeFilnpLRrSsTtuvwxXhkK\fR\*(L",  \*(R"] [filenames...]
.Sp
List directory contents
.Sp
Options:
.Sp
.Vb 28
\&        -1      list files in a single column
\&        -A      do not list implied . and ..
\&        -a      do not hide entries starting with .
\&        -C      list entries by columns
\&        -c      with -l: show ctime
\&        -d      list directory entries instead of contents
\&        -e      list both full date and full time
\&        -F      append indicator (one of */=@|) to entries
\&        -i      list the i-node for each file
\&        -l      use a long listing format
\&        -n      list numeric UIDs and GIDs instead of names
\&        -p      append indicator (one of /=@|) to entries
\&        -L      list entries pointed to by symbolic links
\&        -R      list subdirectories recursively
\&        -r      sort the listing in reverse order
\&        -S      sort the listing by file size
\&        -s      list the size of each file, in blocks
\&        -T NUM  assume Tabstop every NUM columns
\&        -t      with -l: show modification time
\&        -u      with -l: show access time
\&        -v      sort the listing by version
\&        -w NUM  assume the terminal is NUM columns wide
\&        -x      list entries by lines instead of by columns
\&        -X      sort the listing by extension
\&        -h      print sizes in human readable format (e.g., 1K 243M 2G )
\&        USAGE_SELINUX(" -k      print security context
\&        -K      print security context in long format
\&", )
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBlsmod\fR" 4
.IX Item "lsmod"
lsmod 	
.Sp
List the currently loaded kernel modules.
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBmakedevs\fR" 4
.IX Item "makedevs"
makedevs \s-1NAME\s0 \s-1TYPE\s0 \s-1MAJOR\s0 \s-1MINOR\s0 \s-1FIRST\s0 \s-1LAST\s0 [s]
.Sp
Creates a range of block or character special files
.Sp
TYPEs include:
.Sp
.Vb 3
\&        b:      Make a block (buffered) device.
\&        c or u: Make a character (un-buffered) device.
\&        p:      Make a named pipe. MAJOR and MINOR are ignored for named pipes.
.Ve
.Sp
\&\s-1FIRST\s0 specifies the number appended to \s-1NAME\s0 to create the first device.
\&\s-1LAST\s0 specifies the number of the last item that should be created.
If 's' is the last argument, the base device is created as well.
.Sp
For example:
.Sp
.Vb 2
\&        makedevs /dev/ttyS c 4 66 2 63   ->  ttyS2-ttyS63
\&        makedevs /dev/hda b 3 0 0 8 s    ->  hda,hda1-hda8
.Ve
.Sp
Example:
.Sp
.Vb 4
\&        $ makedevs /dev/ttyS c 4 66 2 63
\&        [creates ttyS2-ttyS63]
\&        $ makedevs /dev/hda b 3 0 0 8 s
\&        [creates hda,hda1-hda8]
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBmd5sum\fR" 4
.IX Item "md5sum"
md5sum [\s-1OPTION\s0] [\s-1FILE\s0]...
or: md5sum [\s-1OPTION\s0] \fB\-c\fR [\s-1FILE\s0]
.Sp
Print or check \s-1MD5\s0 checksums.
.Sp
Options:
With no \s-1FILE\s0, or when \s-1FILE\s0 is \-, read standard input.
.Sp
.Vb 4
\&        -b      read files in binary mode
\&        -c      check MD5 sums against given list
\&        -t      read files in text mode (default)
\&        -g      read a string
.Ve
.Sp
The following two options are useful only when verifying checksums:
.Sp
.Vb 2
\&        -s      don't output anything, status code shows success
\&        -w      warn about improperly formated MD5 checksum lines
.Ve
.Sp
Example:
.Sp
.Vb 8
\&        $ md5sum < busybox
\&        6fd11e98b98a58f64ff3398d7b324003
\&        $ md5sum busybox
\&        6fd11e98b98a58f64ff3398d7b324003  busybox
\&        $ md5sum -c -
\&        6fd11e98b98a58f64ff3398d7b324003  busybox
\&        busybox: OK
\&        ^D
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBmesg\fR" 4
.IX Item "mesg"
mesg mesg [y|n]
.Sp
mesg [Y|N], controls write access to your terminal
.Sp
.Vb 2
\&        y       Allow write access to your terminal.
\&        n       Disallow write access to your terminal.
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBminit\fR" 4
.IX Item "minit"
minit [\fB\-spPrRC\fR]
.Sp
[\fB\-spPrRC\fR]
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBmkdir\fR" 4
.IX Item "mkdir"
mkdir [\s-1OPTION\s0] \s-1DIRECTORY\s0...
.Sp
Create the \s-1DIRECTORY\s0(ies) if they do not already exist
.Sp
Options:
.Sp
.Vb 2
\&        -m      set permission mode (as in chmod), not rwxrwxrwx - umask
\&        -p      no error if existing, make parent directories as needed
.Ve
.Sp
Example:
.Sp
.Vb 6
\&        $ mkdir /tmp/foo
\&        $ mkdir /tmp/foo
\&        /tmp/foo: File exists
\&        $ mkdir /tmp/foo/bar/baz
\&        /tmp/foo/bar/baz: No such file or directory
\&        $ mkdir -p /tmp/foo/bar/baz
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBmkfifo\fR" 4
.IX Item "mkfifo"
mkfifo [\s-1OPTIONS\s0] name
.Sp
Creates a named pipe (identical to 'mknod name p')
.Sp
Options:
.Sp
.Vb 1
\&        -m      create the pipe using the specified mode (default a=rw)
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBmkfs_minix\fR" 4
.IX Item "mkfs_minix"
mkfs_minix [\fB\-c\fR | \fB\-l\fR filename] [\fB\-nXX\fR] [\fB\-iXX\fR] /dev/name [blocks]
.Sp
Make a \s-1MINIX\s0 filesystem.
.Sp
Options:
.Sp
.Vb 5
\&        -c              Check the device for bad blocks
\&        -n [14|30]      Specify the maximum length of filenames
\&        -i INODES       Specify the number of inodes for the filesystem
\&        -l FILENAME     Read the bad blocks list from FILENAME
\&        -v              Make a Minix version 2 filesystem
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBmknod\fR" 4
.IX Item "mknod"
mknod [\s-1OPTIONS\s0] \s-1NAME\s0 \s-1TYPE\s0 \s-1MAJOR\s0 \s-1MINOR\s0
.Sp
Create a special file (block, character, or pipe).
.Sp
Options:
.Sp
.Vb 1
\&        -m      create the special file using the specified mode (default a=rw)
.Ve
.Sp
TYPEs include:
.Sp
.Vb 3
\&        b:      Make a block (buffered) device.
\&        c or u: Make a character (un-buffered) device.
\&        p:      Make a named pipe. MAJOR and MINOR are ignored for named pipes.
.Ve
.Sp
Example:
.Sp
.Vb 2
\&        $ mknod /dev/fd0 b 2 0 
\&        $ mknod -m 644 /tmp/pipe p
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBmkswap\fR" 4
.IX Item "mkswap"
mkswap [\fB\-c\fR] [\fB\-v0\fR|\fB\-v1\fR] device [block\-count]
.Sp
Prepare a disk partition to be used as a swap partition.
.Sp
Options:
.Sp
.Vb 5
\&        -c              Check for read-ability.
\&        -v0             Make version 0 swap [max 128 Megs].
\&        -v1             Make version 1 swap [big!] (default for kernels >
\&                        2.1.117).
\&        block-count     Number of block to use (default is entire partition).
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBmktemp\fR" 4
.IX Item "mktemp"
mktemp [\fB\-q\fR] \s-1TEMPLATE\s0
.Sp
Creates a temporary file with its name based on \s-1TEMPLATE\s0.
\&\s-1TEMPLATE\s0 is any name with six `Xs' (i.e., /tmp/temp.XXXXXX).
.Sp
Example:
.Sp
.Vb 4
\&        $ mktemp /tmp/temp.XXXXXX
\&        /tmp/temp.mWiLjM
\&        $ ls -la /tmp/temp.mWiLjM
\&        -rw-------    1 andersen andersen        0 Apr 25 17:10 /tmp/temp.mWiLjM
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBmodprobe\fR" 4
.IX Item "modprobe"
modprobe [\s-1FILE\s0 ...]
.Sp
Used for high level module loading and unloading.
.Sp
Example:
.Sp
.Vb 1
\&        $ modprobe cdrom
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBmore\fR" 4
.IX Item "more"
more [\s-1FILE\s0 ...]
.Sp
More is a filter for viewing \s-1FILE\s0 one screenful at a time.
.Sp
Example:
.Sp
.Vb 1
\&        $ dmesg | more
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBmount\fR" 4
.IX Item "mount"
mount [flags] \s-1DEVICE\s0 \s-1NODE\s0 [\fB\-o\fR options,more\-options]
.Sp
Mount a filesystem
.Sp
Flags:
.Sp
.Vb 7
\&        -a:             Mount all filesystems in fstab.
\&        -f:             "Fake" Add entry to mount table but don't mount it.
\&        -n:             Don't write a mount table entry.
\&        -o option:      One of many filesystem options, listed below.
\&        -r:             Mount the filesystem read-only.
\&        -t fs-type:     Specify the filesystem type.
\&        -w:             Mount for reading and writing (default).
.Ve
.Sp
Options for use with the "\fB\-o\fR" flag:
.Sp
.Vb 9
\&        async/sync:     Writes are asynchronous / synchronous.
\&        atime/noatime:  Enable / disable updates to inode access times.
\&        dev/nodev:      Allow use of special device files / disallow them.
\&        exec/noexec:    Allow use of executable files / disallow them.
\&        loop:           Mounts a file via loop device.
\&        suid/nosuid:    Allow set-user-id-root programs / disallow them.
\&        remount:        Re-mount a mounted filesystem, changing its flags.
\&        ro/rw:          Mount for read-only / read-write.
\&        bind:           Use the linux 2.4.x "bind" feature.
.Ve
.Sp
There are \s-1EVEN\s0 \s-1MORE\s0 flags that are specific to each filesystem.
You'll have to see the written documentation for those filesystems.
.Sp
Example:
.Sp
.Vb 6
\&        $ mount
\&        /dev/hda3 on / type minix (rw)
\&        proc on /proc type proc (rw)
\&        devpts on /dev/pts type devpts (rw)
\&        $ mount /dev/fd0 /mnt -t msdos -o ro
\&        $ mount /tmp/diskimage /opt -t ext2 -o loop
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBmsvc\fR" 4
.IX Item "msvc"
msvc \-[udorspchaitkx] service
.Sp
[option] service
Where option is one of
.Sp
.Vb 13
\&        -u      Up.  If the service is not running, start it.  If the service stops, restart it.
\&        -d      Down.  If the service is running, stop it, do not restart it.
\&        -o      Once.  If the service is not running, start it.  Do not restart it if it stops.
\&        -r      Tell supervise that the service is normally running; this affects status messages.
\&        -s      Tell supervise that the service is normally stopped; this affects status messages.
\&        -p      Pause.  Send the service a STOP signal.
\&        -c      Continue.  Send the service a CONT signal.
\&        -h      Hangup.  Send the service a HUP signal.
\&        -a      Alarm.  Send the service an ALRM signal.
\&        -i      Interrupt.  Send the service an INT signal.
\&        -t      Terminate.  Send the service a TERM signal.
\&        -k      Kill.  Send the service a KILL signal.
\&        -x      Exit.  supervise will quit as soon as the service is down.
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBmt\fR" 4
.IX Item "mt"
mt [\fB\-f\fR device] opcode value
.Sp
Control magnetic tape drive operation
.Sp
Available Opcodes:
.Sp
bsf bsfm bsr bss datacompression drvbuffer eof eom erase
fsf fsfm fsr fss load lock mkpart nop offline ras1 ras2
ras3 reset retension rewind rewoffline seek setblk setdensity
setpart tell unload unlock weof wset
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBmv\fR" 4
.IX Item "mv"
mv \s-1SOURCE\s0 \s-1DEST\s0
or: mv \s-1SOURCE\s0... \s-1DIRECTORY\s0
.Sp
Rename \s-1SOURCE\s0 to \s-1DEST\s0, or move \s-1SOURCE\s0(s) to \s-1DIRECTORY\s0.
.Sp
Example:
.Sp
.Vb 1
\&        $ mv /tmp/foo /bin/bar
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBnameif\fR" 4
.IX Item "nameif"
nameif [\fB\-s\fR] [\fB\-c\fR \s-1FILE\s0] [{\s-1IFNAME\s0 \s-1MACADDR\s0}]
.Sp
Nameif renaming network interface while it in the down state.
.Sp
Options:
.Sp
.Vb 3
\&        -c FILE         Use configuration file (default is /etc/mactab)
\&        -s              Use syslog (LOCAL0 facility).
\&        IFNAME MACADDR  new_interface_name interface_mac_address
.Ve
.Sp
Example:
.Sp
.Vb 3
\&        $ nameif -s dmz0 00:A0:C9:8C:F6:3F
\&         or
\&        $ nameif -c /etc/my_mactab_file
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBnc\fR" 4
.IX Item "nc"
nc [\s-1OPTIONS\s0] [\s-1IP\s0] [port]
.Sp
Netcat opens a pipe to IP:port
.Sp
Options:
.Sp
.Vb 4
\&        -l              listen mode, for inbound connects
\&        -p PORT         local port number
\&        -i SECS         delay interval for lines sent
\&        -e PROG         program to exec after connect (dangerous!)
.Ve
.Sp
Example:
.Sp
.Vb 8
\&        $ nc foobar.somedomain.com 25
\&        220 foobar ESMTP Exim 3.12 #1 Sat, 15 Apr 2000 00:03:02 -0600
\&        help
\&        214-Commands supported:
\&        214-    HELO EHLO MAIL RCPT DATA AUTH
\&        214     NOOP QUIT RSET HELP
\&        quit
\&        221 foobar closing connection
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBnetstat\fR" 4
.IX Item "netstat"
netstat [\fB\-laenrtuwx\fR]
.Sp
\&\fB\-l\fR display listening server sockets
\&\fB\-a\fR display all sockets (default: connected)
\&\fB\-e\fR display other/more information
\&\fB\-n\fR don't resolve names
\&\fB\-r\fR display routing table
\&\fB\-t\fR tcp sockets
\&\fB\-u\fR udp sockets
\&\fB\-w\fR raw sockets
\&\fB\-x\fR unix sockets
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBnslookup\fR" 4
.IX Item "nslookup"
nslookup [\s-1HOST\s0] [\s-1SERVER\s0]
.Sp
Queries the nameserver for the \s-1IP\s0 address of the given \s-1HOST\s0
optionally using a specified \s-1DNS\s0 server
.Sp
Example:
.Sp
.Vb 3
\&        $ nslookup localhost
\&        Server:     default
\&        Address:    default
.Ve
.Sp
.Vb 2
\&        Name:       debian
\&        Address:    127.0.0.1
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBod\fR" 4
.IX Item "od"
od [\fB\-aBbcDdeFfHhIiLlOovXx\fR] [\s-1FILE\s0]
.Sp
Write an unambiguous representation, octal bytes by default, of \s-1FILE\s0
to standard output.  With no \s-1FILE\s0, or when \s-1FILE\s0 is \-, read standard input.
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBopenvt\fR" 4
.IX Item "openvt"
openvt <vtnum> <\s-1COMMAND\s0> [\s-1ARGS\s0...]
.Sp
Start a command on a new virtual terminal
.Sp
Example:
.Sp
.Vb 1
\&        openvt 2 /bin/ash
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBpasswd\fR" 4
.IX Item "passwd"
passwd [\s-1OPTION\s0] [name]
.Sp
Change a user password. If no name is specified,
changes the password for the current user.
Options:
.Sp
.Vb 5
\&        -a      Define which algorithm shall be used for the password.
\&                        (Choices: des, md5      PASSWORD_ALG_TYPES(", sha1") )
\&        -d      Delete the password for the specified user account.
\&        -l      Locks (disables) the specified user account.
\&        -u      Unlocks (re-enables) the specified user account.
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBpatch\fR" 4
.IX Item "patch"
patch [\fB\-p\fR<num>]
.Sp
[\fB\-p\fR<num>]
.Sp
Example:
.Sp
.Vb 1
\&        $ patch -p1 <example.diff
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBpidfilehack\fR" 4
.IX Item "pidfilehack"
pidfilehack [daemon.pid] [daemon]
.Sp
service /var/run/daemon.pid /usr/sbin/daemon args...
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBpidof\fR" 4
.IX Item "pidof"
pidof process-name [process\-name ...]
.Sp
Lists the PIDs of all processes with names that match the names on the command line
.Sp
Example:
.Sp
.Vb 2
\&        $ pidof init
\&        1
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBping\fR" 4
.IX Item "ping"
ping [\s-1OPTION\s0]... host
.Sp
Send \s-1ICMP\s0 \s-1ECHO_REQUEST\s0 packets to network hosts.
.Sp
Options:
.Sp
.Vb 4
\&        -c COUNT        Send only COUNT pings.
\&        -s SIZE         Send SIZE data bytes in packets (default=56).
\&        -q              Quiet mode, only displays output at start
\&                        and when finished.
.Ve
.Sp
Example:
.Sp
.Vb 3
\&        $ ping localhost
\&        PING slag (127.0.0.1): 56 data bytes
\&        64 bytes from 127.0.0.1: icmp_seq=0 ttl=255 time=20.1 ms
.Ve
.Sp
.Vb 3
\&        --- debian ping statistics ---
\&        1 packets transmitted, 1 packets received, 0% packet loss
\&        round-trip min/avg/max = 20.1/20.1/20.1 ms
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBping6\fR" 4
.IX Item "ping6"
ping6 [\s-1OPTION\s0]... host
.Sp
Send \s-1ICMP\s0 \s-1ECHO_REQUEST\s0 packets to network hosts.
.Sp
Options:
.Sp
.Vb 4
\&        -c COUNT        Send only COUNT pings.
\&        -s SIZE         Send SIZE data bytes in packets (default=56).
\&        -q              Quiet mode, only displays output at start
\&                        and when finished.
.Ve
.Sp
Example:
.Sp
.Vb 3
\&        $ ping6 ip6-localhost
\&        PING ip6-localhost (::1): 56 data bytes
\&        64 bytes from ::1: icmp6_seq=0 ttl=64 time=20.1 ms
.Ve
.Sp
.Vb 3
\&        --- ip6-localhost ping statistics ---
\&        1 packets transmitted, 1 packets received, 0% packet loss
\&        round-trip min/avg/max = 20.1/20.1/20.1 ms
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBpivot_root\fR" 4
.IX Item "pivot_root"
pivot_root \s-1NEW_ROOT\s0 \s-1PUT_OLD\s0
.Sp
Move the current root file system to \s-1PUT_OLD\s0 and make \s-1NEW_ROOT\s0
the new root file system.
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBpoweroff\fR" 4
.IX Item "poweroff"
poweroff 	
.Sp
Halt the system and request that the kernel shut off the power.
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBprintf\fR" 4
.IX Item "printf"
printf \s-1FORMAT\s0 [\s-1ARGUMENT\s0...]
.Sp
Formats and prints \s-1ARGUMENT\s0(s) according to \s-1FORMAT\s0,
Where \s-1FORMAT\s0 controls the output exactly as in C printf.
.Sp
Example:
.Sp
.Vb 2
\&        $ printf "Val=%d\en" 5
\&        Val=5
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBps\fR" 4
.IX Item "ps"
ps 	
.Sp
Report process status
.Sp
Options:
.Sp
.Vb 2
\&        -c      show SE Linux context", "
\&This version of ps accepts no options.
.Ve
.Sp
Example:
.Sp
.Vb 11
\&        $ ps
\&          PID  Uid      Gid State Command
\&            1 root     root     S init
\&            2 root     root     S [kflushd]
\&            3 root     root     S [kupdate]
\&            4 root     root     S [kpiod]
\&            5 root     root     S [kswapd]
\&          742 andersen andersen S [bash]
\&          743 andersen andersen S -bash
\&          745 root     root     S [getty]
\&         2990 andersen andersen R ps
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBpwd\fR" 4
.IX Item "pwd"
pwd 	
.Sp
Print the full filename of the current working directory.
.Sp
Example:
.Sp
.Vb 2
\&        $ pwd
\&        /root
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBraid_start\fR" 4
.IX Item "raid_start"
raid_start \s-1MD_DEVICE\s0 \s-1DISK_DEVICE\s0
.Sp
Start \s-1MD_DEVICE\s0, taking superblock from \s-1DISK_DEVICE\s0.
Example: raid_start /dev/md0 /dev/sdb
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBrdate\fR" 4
.IX Item "rdate"
rdate [\fB\-sp\fR] \s-1HOST\s0
.Sp
Get and possibly set the system date and time from a remote \s-1HOST\s0.
.Sp
Options:
.Sp
.Vb 2
\&        -s      Set the system date and time (default).
\&        -p      Print the date and time.
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBreadlink\fR" 4
.IX Item "readlink"
readlink 	
.Sp
Read a symbolic link.
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBrealpath\fR" 4
.IX Item "realpath"
realpath pathname  ...
.Sp
return the canonicalized absolute pathnames of given arguments
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBreboot\fR" 4
.IX Item "reboot"
reboot 	
.Sp
Reboot the system.
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBrenice\fR" 4
.IX Item "renice"
renice priority pid [pid ...]
.Sp
Changes priority of running processes. Allowed priorities range
from 20 (the process runs only when nothing else is running) to 0
(default priority) to \fB\-20\fR (almost nothing else ever gets to run).
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBreset\fR" 4
.IX Item "reset"
reset 	
.Sp
Resets the screen.
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBrm\fR" 4
.IX Item "rm"
rm [\s-1OPTION\s0]... \s-1FILE\s0...
.Sp
Remove (unlink) the \s-1FILE\s0(s).  You may use '\-\-' to
indicate that all following arguments are non\-options.
.Sp
Options:
.Sp
.Vb 3
\&        -i              always prompt before removing each destination
\&        -f              remove existing destinations, never prompt
\&        -r or -R        remove the contents of directories recursively
.Ve
.Sp
Example:
.Sp
.Vb 1
\&        $ rm -rf /tmp/foo
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBrmdir\fR" 4
.IX Item "rmdir"
rmdir [\s-1OPTION\s0]... \s-1DIRECTORY\s0...
.Sp
Remove the \s-1DIRECTORY\s0(ies), if they are empty.
.Sp
Example:
.Sp
.Vb 1
\&        # rmdir /tmp/foo
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBrmmod\fR" 4
.IX Item "rmmod"
rmmod [\s-1OPTION\s0]... [\s-1MODULE\s0]...
.Sp
Unloads the specified kernel modules from the kernel.
.Sp
Options:
.Sp
.Vb 1
\&        -a      Remove all unused modules (recursively)
.Ve
.Sp
Example:
.Sp
.Vb 1
\&        $ rmmod tulip
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBroute\fR" 4
.IX Item "route"
route [{add|del|flush}]
.Sp
Edit the kernel's routing tables.
.Sp
Options:
.Sp
.Vb 2
\&        -n      Dont resolve names.
\&        -e      Display other/more information
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBrpm\fR" 4
.IX Item "rpm"
rpm \fB\-i\fR \fB\-q\fR[ildc]p package.rpm
.Sp
Manipulates \s-1RPM\s0 packages
.Sp
Options:
.Sp
.Vb 7
\&        -i Install package
\&        -q Query package
\&        -p Query uninstalled package
\&        -i Show information
\&        -l List contents
\&        -d List documents
\&        -c List config files
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBrpm2cpio\fR" 4
.IX Item "rpm2cpio"
rpm2cpio package.rpm
.Sp
Outputs a cpio archive of the rpm file.
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBrun_parts\fR" 4
.IX Item "run_parts"
run_parts [\fB\-t\fR] [\fB\-a\fR \s-1ARG\s0] [\fB\-u\fR \s-1MASK\s0] \s-1DIRECTORY\s0
.Sp
Run a bunch of scripts in a directory.
.Sp
Options:
.Sp
.Vb 3
\&        -t              Test only what file will be executed, without execute them.
\&        -a ARG  Pass ARG as an argument for every program invoked.
\&        -u MASK Set the umask to MASK before executing every program.
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBsed\fR" 4
.IX Item "sed"
sed [\fB\-nef\fR] pattern [files...]
.Sp
Options:
.Sp
.Vb 3
\&        -n              suppress automatic printing of pattern space
\&        -e script       add the script to the commands to be executed
\&        -f scriptfile   add the contents of script-file to the commands to be executed
.Ve
.Sp
If no \fB\-e\fR or \fB\-f\fR is given, the first non-option argument is taken as the
sed script to interpret. All remaining arguments are names of input
files; if no input files are specified, then the standard input is read.
.Sp
Example:
.Sp
.Vb 2
\&        $ echo "foo" | sed -e 's/f[a-zA-Z]o/bar/g'
\&        bar
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBsetkeycodes\fR" 4
.IX Item "setkeycodes"
setkeycodes \s-1SCANCODE\s0 \s-1KEYCODE\s0 ...
.Sp
Set entries into the kernel's scancode-to-keycode map,
allowing unusual keyboards to generate usable keycodes.
.Sp
\&\s-1SCANCODE\s0 may be either xx or e0xx (hexadecimal),
and \s-1KEYCODE\s0 is given in decimal
.Sp
Example:
.Sp
.Vb 1
\&        $ setkeycodes e030 127
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBsha1sum\fR" 4
.IX Item "sha1sum"
sha1sum [\s-1OPTION\s0] [\s-1FILE\s0]
.Sp
[\s-1OPTION\s0] [\s-1FILE\s0]
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBsleep\fR" 4
.IX Item "sleep"
sleep [N]...
.Sp
.Vb 2
\&                 Pause for a time equal to the total of the args given, where each arg can
\&have an optional suffix of (s)econds, (m)inutes, (h)ours, or (d)ays.
.Ve
.Sp
Example:
.Sp
.Vb 4
\&        $ sleep 2
\&        [2 second delay results]
\&        $ sleep 1d 3h 22m 8s
\&        [98528 second delay results]
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBsort\fR" 4
.IX Item "sort"
sort [\fB\-nru\fR] [\s-1FILE\s0]...
.Sp
Sorts lines of text in the specified files
.Sp
Options:
.Sp
.Vb 3
\&        -u      suppress duplicate lines
\&        -r      sort in reverse order
\&        -n      sort numerics
.Ve
.Sp
Example:
.Sp
.Vb 7
\&        $ echo -e "e\enf\enb\end\enc\ena" | sort
\&        a
\&        b
\&        c
\&        d
\&        e
\&        f
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBstart_stop_daemon\fR" 4
.IX Item "start_stop_daemon"
start_stop_daemon [\s-1OPTIONS\s0]
.Sp
Program to start and stop services.
Options:
\&\fB\-S\fR			start
\&\fB\-K\fR			stop
\&\fB\-b\fR			force process into background (daemonize)
\&\fB\-x\fR <executable>		program to start/check if it is running
\&\fB\-u\fR <username>|<uid>	stop this user's processes
\&\fB\-n\fR <process\-name>	stop processes with this name
\&\fB\-s\fR <signal>		signal to send (default 15)
\&\fB\-a\fR <pathname>		program to start (default <executable>)
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBstrings\fR" 4
.IX Item "strings"
strings [\fB\-afo\fR] [\fB\-n\fR length] [file ... ]
.Sp
Display printable strings in a binary file.
.Sp
Options:
.Sp
.Vb 3
\&        -f      Precede each string with the name of the file where it was found.
\&        -n N    Specifies that at least N characters forms a sequence (default 4)
\&        -o      Each string is preceded by its decimal offset in the file.
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBstty\fR" 4
.IX Item "stty"
stty [\fB\-a\fR|g] [\fB\-F\fR \s-1DEVICE\s0] [\s-1SETTING\s0]...
.Sp
Without arguments, prints baud rate, line discipline,
and deviations from stty sane.
.Sp
Options:
.Sp
.Vb 4
\&        -F DEVICE       open device instead of stdin
\&        -a              print all current settings in human-readable form
\&        -g              print in stty-readable form
\&        [SETTING]       see manpage
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBsu\fR" 4
.IX Item "su"
su [\s-1OPTION\s0]... [\-] [username]
.Sp
Change user id or become root.
Options:
.Sp
.Vb 1
\&        -p      Preserve environment
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBsulogin\fR" 4
.IX Item "sulogin"
sulogin [\s-1OPTION\s0]... [tty\-device]
.Sp
Single user login
Options:
.Sp
.Vb 3
\&        -f      Do not authenticate (user already authenticated)
\&        -h      Name of the remote host for this login.
\&        -p      Preserve environment.
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBswapoff\fR" 4
.IX Item "swapoff"
swapoff [\s-1OPTION\s0] [\s-1DEVICE\s0]
.Sp
Stop swapping virtual memory pages on \s-1DEVICE\s0.
.Sp
Options:
.Sp
.Vb 1
\&        -a      Stop swapping on all swap devices
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBswapon\fR" 4
.IX Item "swapon"
swapon [\s-1OPTION\s0] [\s-1DEVICE\s0]
.Sp
Start swapping virtual memory pages on \s-1DEVICE\s0.
.Sp
Options:
.Sp
.Vb 1
\&        -a      Start swapping on all swap devices
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBsync\fR" 4
.IX Item "sync"
sync 	
.Sp
Write all buffered filesystem blocks to disk.
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBsyslogd\fR" 4
.IX Item "syslogd"
syslogd [\s-1OPTION\s0]...
.Sp
Linux system and kernel logging utility.
Note that this version of syslogd ignores /etc/syslog.conf.
.Sp
Options:
.Sp
.Vb 6
\&        -m NUM          Interval between MARK lines (default=20min, 0=off)
\&        -n              Run as a foreground process
\&        -O FILE         Use an alternate log file (default=/var/log/messages)
\&        -R HOST[:PORT]  Log to IP or hostname on PORT (default PORT=514/UDP)
\&        -L              Log locally and via network logging (default is network only)
\&        -C              Log to a circular buffer (read the buffer using logread)
.Ve
.Sp
Example:
.Sp
.Vb 2
\&        $ syslogd -R masterlog:514
\&        $ syslogd -R 192.168.1.1:601
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBtail\fR" 4
.IX Item "tail"
tail [\s-1OPTION\s0]... [\s-1FILE\s0]...
.Sp
Print last 10 lines of each \s-1FILE\s0 to standard output.
With more than one \s-1FILE\s0, precede each with a header giving the
file name. With no \s-1FILE\s0, or when \s-1FILE\s0 is \-, read standard input.
.Sp
Options:
.Sp
.Vb 6
\&        -c N[kbm]       output the last N bytes
\&        -n N[kbm]       print last N lines instead of last 10
\&        -f              output data as the file grows
\&        -q              never output headers giving file names
\&        -s SEC          wait SEC seconds between reads with -f
\&        -v              always output headers giving file names
.Ve
.Sp
If the first character of N (bytes or lines) is a '+', output begins with 
the Nth item from the start of each file, otherwise, print the last N items
in the file. N bytes may be suffixed by k (x1024), b (x512), or m (1024^2).
.Sp
Example:
.Sp
.Vb 2
\&        $ tail -n 1 /etc/resolv.conf
\&        nameserver 10.0.0.1
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBtar\fR" 4
.IX Item "tar"
tar \-[czjxtvO] [\-\fB\-exclude\fR \s-1FILE\s0] [\fB\-X\fR \s-1FILE\s0][\fB\-f\fR \s-1TARFILE\s0] [\fB\-C\fR \s-1DIR\s0] [\s-1FILE\s0(s)] ...
.Sp
Create, extract, or list files from a tar file.
.Sp
Options:
.Sp
.Vb 3
\&        c               create
\&        x               extract
\&        t               list
.Ve
.Sp
Archive format selection:
.Sp
.Vb 2
\&        z               Filter the archive through gzip
\&        j               Filter the archive through bzip2
.Ve
.Sp
File selection:
.Sp
.Vb 6
\&        f               name of TARFILE or "-" for stdin
\&        O               extract to stdout
\&        exclude         file to exclude
\&        X               file with names to exclude
\&        C               change to directory DIR before operation
\&        v               verbosely list files processed
.Ve
.Sp
Example:
.Sp
.Vb 2
\&        $ zcat /tmp/tarball.tar.gz | tar -xf -
\&        $ tar -cf /tmp/tarball.tar /usr/local
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBtee\fR" 4
.IX Item "tee"
tee [\s-1OPTION\s0]... [\s-1FILE\s0]...
.Sp
Copy standard input to each \s-1FILE\s0, and also to standard output.
.Sp
Options:
.Sp
.Vb 2
\&        -a      append to the given FILEs, do not overwrite
\&        -i      ignore interrupt signals (SIGINT)
.Ve
.Sp
Example:
.Sp
.Vb 3
\&        $ echo "Hello" | tee /tmp/foo
\&        $ cat /tmp/foo
\&        Hello
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBtelnet\fR" 4
.IX Item "telnet"
telnet \s-1HOST\s0 [\s-1PORT\s0]
.Sp
Telnet is used to establish interactive communication with another
computer over a network using the \s-1TELNET\s0 protocol.
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBtelnetd\fR" 4
.IX Item "telnetd"
telnetd [\s-1OPTION\s0]
.Sp
Telnetd listens for incoming \s-1TELNET\s0 connections on \s-1PORT\s0.
Options:
.Sp
.Vb 2
\&        -p PORT listen for connections on PORT (default 23)
\&        -l LOGIN        exec LOGIN on connect (default /bin/sh)
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBtest\fR" 4
.IX Item "test"
test \s-1EXPRESSION\s0
  or   [ \s-1EXPRESSION\s0 ]
.Sp
Checks file types and compares values returning an exit
code determined by the value of \s-1EXPRESSION\s0.
.Sp
Example:
.Sp
.Vb 12
\&        $ test 1 -eq 2
\&        $ echo $?
\&        1
\&        $ test 1 -eq 1
\&        $ echo $? 
\&        0
\&        $ [ -d /etc ]
\&        $ echo $?
\&        0
\&        $ [ -d /junk ]
\&        $ echo $?
\&        1
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBtftp\fR" 4
.IX Item "tftp"
tftp [\s-1OPTION\s0]... \s-1HOST\s0 [\s-1PORT\s0]
.Sp
Transfers a file from/to a tftp server using \*(L"octet\*(R" mode.
.Sp
Options:
.Sp
.Vb 5
\&        -l FILE Local FILE.
\&        -r FILE Remote FILE.
\&        -g      Get file.
\&        -p      Put file.
\&        -b SIZE Transfer blocks of SIZE octets.
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBtime\fR" 4
.IX Item "time"
time [\s-1OPTION\s0]... \s-1COMMAND\s0 [\s-1ARGS\s0...]
.Sp
Runs the program \s-1COMMAND\s0 with arguments \s-1ARGS\s0.  When \s-1COMMAND\s0 finishes,
\&\s-1COMMAND\s0's resource usage information is displayed
.Sp
Options:
.Sp
.Vb 1
\&        -v      Displays verbose resource usage information.
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBtop\fR" 4
.IX Item "top"
top [\fB\-d\fR <seconds>]
.Sp
top provides an view of processor activity in real time.
This utility reads the status for all processes in /proc each <seconds>
and shows the status for however many processes will fit on the screen.
This utility will not show processes that are started after program startup,
but it will show the \s-1EXIT\s0 status for and PIDs that exit while it is running.
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBtouch\fR" 4
.IX Item "touch"
touch [\fB\-c\fR] \s-1FILE\s0 [\s-1FILE\s0 ...]
.Sp
Update the last-modified date on the given FILE[s].
.Sp
Options:
.Sp
.Vb 1
\&        -c      Do not create any files
.Ve
.Sp
Example:
.Sp
.Vb 5
\&        $ ls -l /tmp/foo
\&        /bin/ls: /tmp/foo: No such file or directory
\&        $ touch /tmp/foo
\&        $ ls -l /tmp/foo
\&        -rw-rw-r--    1 andersen andersen        0 Apr 15 01:11 /tmp/foo
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBtr\fR" 4
.IX Item "tr"
tr [\fB\-cds\fR] \s-1STRING1\s0 [\s-1STRING2\s0]
.Sp
Translate, squeeze, and/or delete characters from
standard input, writing to standard output.
.Sp
Options:
.Sp
.Vb 3
\&        -c      take complement of STRING1
\&        -d      delete input characters coded STRING1
\&        -s      squeeze multiple output characters of STRING2 into one character
.Ve
.Sp
Example:
.Sp
.Vb 2
\&        $ echo "gdkkn vnqkc" | tr [a-y] [b-z]
\&        hello world
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBtraceroute\fR" 4
.IX Item "traceroute"
traceroute [\fB\-dnrv\fR] [\fB\-m\fR max_ttl] [\fB\-p\fR port#] [\fB\-q\fR nqueries]
	[\fB\-s\fR src_addr] [\fB\-t\fR tos] [\fB\-w\fR wait] host [data size]
.Sp
trace the route ip packets follow going to \*(L"host\*(R"
Options:
.Sp
.Vb 14
\&        -d      set SO_DEBUG options to socket
\&        -n      Print hop addresses numerically rather than symbolically
\&        -r      Bypass the normal routing tables and send directly to a host
\&        -v      Verbose output
\&        -m max_ttl      Set the max time-to-live (max number of hops)
\&        -p port#        Set the base UDP port number used in probes
\&                (default is 33434)
\&        -q nqueries     Set the number of probes per ``ttl'' to nqueries
\&                (default is 3)
\&        -s src_addr     Use the following IP address as the source address
\&        -t tos  Set the type-of-service in probe packets to the following value
\&                (default 0)
\&        -w wait Set the time (in seconds) to wait for a response to a probe
\&                (default 3 sec.).
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBtrue\fR" 4
.IX Item "true"
true 	
.Sp
Return an exit code of \s-1TRUE\s0 (0).
.Sp
Example:
.Sp
.Vb 3
\&        $ true
\&        $ echo $?
\&        0
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBtty\fR" 4
.IX Item "tty"
tty 	
.Sp
Print the file name of the terminal connected to standard input.
.Sp
Options:
.Sp
.Vb 1
\&        -s      print nothing, only return an exit status
.Ve
.Sp
Example:
.Sp
.Vb 2
\&        $ tty
\&        /dev/tty2
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBudhcpc\fR" 4
.IX Item "udhcpc"
udhcpc [\fB\-fbnqv\fR] [\fB\-c\fR \s-1CLIENTID\s0] [\fB\-H\fR \s-1HOSTNAME\s0] [\fB\-i\fR \s-1INTERFACE\s0]
[\fB\-p\fR pidfile] [\fB\-r\fR \s-1IP\s0] [\fB\-s\fR script]
.Sp
.Vb 12
\&        -c,     --clientid=CLIENTID     Client identifier
\&        -H,     --hostname=HOSTNAME     Client hostname
\&        -h,                             Alias for -H
\&        -f,     --foreground    Do not fork after getting lease
\&        -b,     --background    Fork to background if lease cannot be immediately negotiated.
\&        -i,     --interface=INTERFACE   Interface to use (default: eth0)
\&        -n,     --now   Exit with failure if lease cannot be immediately negotiated.
\&        -p,     --pidfile=file  Store process ID of daemon in file
\&        -q,     --quit  Quit after obtaining lease
\&        -r,     --request=IP    IP address to request (default: none)
\&        -s,     --script=file   Run file at dhcp events (default: /usr/share/udhcpc/default.script)
\&        -v,     --version       Display version
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBudhcpd\fR" 4
.IX Item "udhcpd"
udhcpd [configfile]
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBumount\fR" 4
.IX Item "umount"
umount [flags] FILESYSTEM|DIRECTORY
.Sp
Unmount file systems
.Sp
Flags:
.Sp
.Vb 5
\&        -a      Unmount all file systems in /etc/mtab
\&        -n      Don't erase /etc/mtab entries
\&        -r      Try to remount devices as read-only if mount is busy
\&        -f      Force umount (i.e., unreachable NFS server)
\&        -l      Do not free loop device (if a loop device has been used)
.Ve
.Sp
Example:
.Sp
.Vb 1
\&        $ umount /dev/hdc1
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBuname\fR" 4
.IX Item "uname"
uname [\s-1OPTION\s0]...
.Sp
Print certain system information.  With no \s-1OPTION\s0, same as \fB\-s\fR.
.Sp
Options:
.Sp
.Vb 7
\&        -a      print all information
\&        -m      the machine (hardware) type
\&        -n      print the machine's network node hostname
\&        -r      print the operating system release
\&        -s      print the operating system name
\&        -p      print the host processor type
\&        -v      print the operating system version
.Ve
.Sp
Example:
.Sp
.Vb 2
\&        $ uname -a
\&        Linux debian 2.2.15pre13 #5 Tue Mar 14 16:03:50 MST 2000 i686 unknown
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBuncompress\fR" 4
.IX Item "uncompress"
uncompress [\fB\-c\fR] [\fB\-f\fR] [ name ... ]
.Sp
Uncompress .Z file[s]
Options:
.Sp
.Vb 2
\&        -c      extract to stdout
\&        -f      force overwrite an existing file
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBuniq\fR" 4
.IX Item "uniq"
uniq [\s-1OPTION\s0]... [\s-1INPUT\s0 [\s-1OUTPUT\s0]]
.Sp
Discard all but one of successive identical lines from \s-1INPUT\s0
(or standard input), writing to \s-1OUTPUT\s0 (or standard output).
.Sp
Options:
.Sp
.Vb 5
\&        -c      prefix lines by the number of occurrences
\&        -d      only print duplicate lines
\&        -u      only print unique lines
\&        -f N    skip the first N fields
\&        -s N    skip the first N chars (after any skipped fields)
.Ve
.Sp
Example:
.Sp
.Vb 4
\&        $ echo -e "a\ena\enb\enc\enc\ena" | sort | uniq
\&        a
\&        b
\&        c
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBunix2dos\fR" 4
.IX Item "unix2dos"
unix2dos [option] [\s-1FILE\s0]
.Sp
Converts \s-1FILE\s0 from unix format to dos format.  When no option
is given, the input is converted to the opposite output format.
When no file is given, uses stdin for input and stdout for output.
Options:
.Sp
.Vb 2
\&        -u      output will be in UNIX format
\&        -d      output will be in DOS format
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBunzip\fR" 4
.IX Item "unzip"
unzip [\fB\-opts\fR[modifiers]] file[.zip] [list] [\fB\-x\fR xlist] [\fB\-d\fR exdir]
.Sp
Extracts files from \s-1ZIP\s0 archives.
.Sp
Options:
.Sp
.Vb 7
\&        -l      list archive contents (short form)
\&        -n      never overwrite existing files (default)
\&        -o      overwrite files without prompting
\&        -p      send output to stdout
\&        -q      be quiet
\&        -x      exclude these files
\&        -d      extract files into this directory
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBuptime\fR" 4
.IX Item "uptime"
uptime 	
.Sp
Display the time since the last boot.
.Sp
Example:
.Sp
.Vb 2
\&        $ uptime
\&          1:55pm  up  2:30, load average: 0.09, 0.04, 0.00
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBusleep\fR" 4
.IX Item "usleep"
usleep N
.Sp
Pause for N microseconds.
.Sp
Example:
.Sp
.Vb 2
\&        $ usleep 1000000
\&        [pauses for 1 second]
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBuudecode\fR" 4
.IX Item "uudecode"
uudecode [\s-1FILE\s0]...
.Sp
Uudecode a file that is uuencoded.
.Sp
Options:
.Sp
.Vb 1
\&        -o FILE direct output to FILE
.Ve
.Sp
Example:
.Sp
.Vb 3
\&        $ uudecode -o busybox busybox.uu
\&        $ ls -l busybox
\&        -rwxr-xr-x   1 ams      ams        245264 Jun  7 21:35 busybox
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBuuencode\fR" 4
.IX Item "uuencode"
uuencode [\s-1OPTION\s0] [\s-1INFILE\s0] \s-1REMOTEFILE\s0
.Sp
Uuencode a file.
.Sp
Options:
.Sp
.Vb 1
\&        -m      use base64 encoding per RFC1521
.Ve
.Sp
Example:
.Sp
.Vb 5
\&        $ uuencode busybox busybox
\&        begin 755 busybox
\&        <encoded file snipped>
\&        $ uudecode busybox busybox > busybox.uu
\&        $
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBvconfig\fR" 4
.IX Item "vconfig"
vconfig \s-1COMMAND\s0 [\s-1OPTIONS\s0] ...
.Sp
Usage: add             [interface\-name] [vlan_id] 
.Sp
.Vb 5
\&       rem             [vlan-name] 
\&       set_flag        [interface-name] [flag-num]       [0 | 1] 
\&       set_egress_map  [vlan-name]      [skb_priority]   [vlan_qos] 
\&       set_ingress_map [vlan-name]      [skb_priority]   [vlan_qos] 
\&       set_name_type   [name-type]
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBvi\fR" 4
.IX Item "vi"
vi [\s-1OPTION\s0] [\s-1FILE\s0]...
.Sp
edit \s-1FILE\s0.
.Sp
Options:
.Sp
.Vb 1
\&        -R      Read-only- do not write to the file.
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBvlock\fR" 4
.IX Item "vlock"
vlock [\s-1OPTIONS\s0]
.Sp
Lock a virtual terminal.  A password is required to unlock
Options:
.Sp
.Vb 1
\&        -a      Lock all VTs
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBwatch\fR" 4
.IX Item "watch"
watch [\fB\-n\fR <seconds>] \s-1COMMAND\s0...
.Sp
Executes a program periodically.
Options:
.Sp
.Vb 1
\&        -n      Loop period in seconds - default is 2.
.Ve
.Sp
Example:
.Sp
.Vb 4
\&        $ watch date
\&        Mon Dec 17 10:31:40 GMT 2000
\&        Mon Dec 17 10:31:42 GMT 2000
\&        Mon Dec 17 10:31:44 GMT 2000
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBwatchdog\fR" 4
.IX Item "watchdog"
watchdog [\fB\-t\fR <seconds>] \s-1DEV\s0
.Sp
Periodically write to watchdog device \s-1DEV\s0.
Options:
.Sp
.Vb 1
\&        -t      Timer period in seconds - default is 30.
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBwc\fR" 4
.IX Item "wc"
wc [\s-1OPTION\s0]... [\s-1FILE\s0]...
.Sp
Print line, word, and byte counts for each \s-1FILE\s0, and a total line if
more than one \s-1FILE\s0 is specified.  With no \s-1FILE\s0, read standard input.
.Sp
Options:
.Sp
.Vb 4
\&        -c      print the byte counts
\&        -l      print the newline counts
\&        -L      print the length of the longest line
\&        -w      print the word counts
.Ve
.Sp
Example:
.Sp
.Vb 2
\&        $ wc /etc/passwd
\&             31      46    1365 /etc/passwd
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBwget\fR" 4
.IX Item "wget"
wget [\fB\-c\fR|\-\fB\-continue\fR] [\fB\-q\fR|\-\fB\-quiet\fR] [\fB\-O\fR|\-\fB\-output\fR\-document file]
	[\-\fB\-header\fR 'header: value'] [\fB\-Y\fR|\-\fB\-proxy\fR on/off] [\fB\-P\fR \s-1DIR\s0] url
.Sp
wget retrieves files via \s-1HTTP\s0 or \s-1FTP\s0
.Sp
Options:
.Sp
.Vb 5
\&        -c      continue retrieval of aborted transfers
\&        -q      quiet mode - do not print
\&        -P      Set directory prefix to DIR
\&        -O      save to filename ('-' for stdout)
\&        -Y      use proxy ('on' or 'off')
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBwhich\fR" 4
.IX Item "which"
which [\s-1COMMAND\s0 ...]
.Sp
Locates a \s-1COMMAND\s0.
.Sp
Example:
.Sp
.Vb 2
\&        $ which login
\&        /bin/login
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBwho\fR" 4
.IX Item "who"
who         
.Sp
Prints the current user names and related information
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBwhoami\fR" 4
.IX Item "whoami"
whoami 	
.Sp
Prints the user name associated with the current effective user id.
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBxargs\fR" 4
.IX Item "xargs"
xargs [\s-1COMMAND\s0] [\fB\-prt\fR] [\s-1ARGS\s0...]
.Sp
Executes \s-1COMMAND\s0 on every item given by standard input.
.Sp
Options:
.Sp
.Vb 3
\&        -p      Prompt the user about whether to run each command
\&        -r      Do not run command for empty readed lines
\&        -t      Print the command line on stderr before executing it.
.Ve
.Sp
Example:
.Sp
.Vb 2
\&        $ ls | xargs gzip
\&        $ find . -name '*.c' -print | xargs rm
.Ve
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fByes\fR" 4
.IX Item "yes"
yes [\s-1OPTION\s0]... [\s-1STRING\s0]...
.Sp
Repeatedly outputs a line with all specified \s-1STRING\s0(s), or 'y'.
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.IP "\fBzcat\fR" 4
.IX Item "zcat"
zcat \s-1FILE\s0
.Sp
Uncompress to stdout.
.Sp
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.SH "LIBC NSS"
.IX Header "LIBC NSS"
\&\s-1GNU\s0 Libc uses the Name Service Switch (\s-1NSS\s0) to configure the behavior of the C
library for the local environment, and to configure how it reads system data,
such as passwords and group information.  BusyBox has made it Policy that it
will never use \s-1NSS\s0, and will never use and libc calls that make use of \s-1NSS\s0.
This allows you to run an embedded system without the need for installing an
/etc/nsswitch.conf file and without and /lib/libnss_* libraries installed.
.PP
If you are using a system that is using a remote \s-1LDAP\s0 server for authentication
via \s-1GNU\s0 libc \s-1NSS\s0, and you want to use BusyBox, then you will need to adjust the
BusyBox source.  Chances are though, that if you have enough space to install
of that stuff on your system, then you probably want the full \s-1GNU\s0 utilities.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fItextutils\fR\|(1), \fIshellutils\fR\|(1), etc...
.SH "MAINTAINER"
.IX Header "MAINTAINER"
Erik Andersen <andersen@codepoet.org>
.SH "AUTHORS"
.IX Header "AUTHORS"
The following people have contributed code to BusyBox whether
they know it or not.
.PP
Erik Andersen <andersen@codepoet.org>
.PP
.Vb 2
\&    Tons of new stuff, major rewrite of most of the
\&    core apps, tons of new apps as noted in header files.
.Ve
.PP
John Beppu <beppu@codepoet.org>
.PP
.Vb 2
\&    du, head, nslookup, sort, tee, uniq (so Kraai could rewrite them ;-),
\&    documentation
.Ve
.PP
Edward Betts <edward@debian.org>
.PP
.Vb 1
\&    expr, hostid, logname, tty, wc, whoami, yes
.Ve
.PP
Brian Candler <B.Candler@pobox.com>
.PP
.Vb 1
\&    tiny-ls(ls)
.Ve
.PP
Randolph Chung <tausq@debian.org>
.PP
.Vb 1
\&    fbset, ping, hostname, and mkfifo
.Ve
.PP
Dave Cinege <dcinege@psychosis.com>	
.PP
.Vb 2
\&    more(v2), makedevs, dutmp, modularization, auto links file, 
\&    various fixes, Linux Router Project maintenance
.Ve
.PP
Larry Doolittle <ldoolitt@recycle.lbl.gov>
.PP
.Vb 1
\&    various fixes, shell rewrite
.Ve
.PP
Karl M. Hegbloom <karlheg@debian.org>
.PP
.Vb 1
\&    cp_mv.c, the test suite, various fixes to utility.c, &c.
.Ve
.PP
Sterling Huxley <sterling@europa.com>
.PP
.Vb 1
\&    vi (!!!)
.Ve
.PP
Daniel Jacobowitz <dan@debian.org>
.PP
.Vb 1
\&    mktemp.c
.Ve
.PP
Matt Kraai <kraai@alumni.carnegiemellon.edu>
.PP
.Vb 1
\&    documentation, bugfixes
.Ve
.PP
John Lombardo <john@deltanet.com>	
.PP
.Vb 1
\&    dirname, tr
.Ve
.PP
Glenn McGrath <bug1@netconnect.com.au>
.PP
.Vb 1
\&    ar.c
.Ve
.PP
Vladimir Oleynik <dzo@simtreas.ru>
.PP
.Vb 4
\&    cmdedit, xargs(current), httpd(current);
\&    ports: ash, crond, fdisk, inetd, stty, traceroute, top;
\&    locale, various fixes
\&    and irreconcilable critic of everything not perfect.
.Ve
.PP
Bruce Perens <bruce@pixar.com>
.PP
.Vb 1
\&    Original author of BusyBox. His code is still in many apps.
.Ve
.PP
Chip Rosenthal <chip@unicom.com>, <crosenth@covad.com>
.PP
.Vb 1
\&    wget - Contributed by permission of Covad Communications
.Ve
.PP
Pavel Roskin <proski@gnu.org>
.PP
.Vb 1
\&    Lots of bugs fixes and patches.
.Ve
.PP
Gyepi Sam <gyepi@praxis\-sw.com>
.PP
.Vb 1
\&    Remote logging feature for syslogd
.Ve
.PP
Linus Torvalds <torvalds@transmeta.com>
.PP
.Vb 1
\&    mkswap, fsck.minix, mkfs.minix
.Ve
.PP
Mark Whitley <markw@codepoet.org>
.PP
.Vb 1
\&    sed remix, bug fixes, style-guide, etc.
.Ve
.PP
Charles P. Wright <cpwright@villagenet.com>
.PP
.Vb 1
\&    gzip, mini-netcat(nc)
.Ve
.PP
Enrique Zanardi <ezanardi@ull.es>
.PP
.Vb 1
\&    tarcat (since removed), loadkmap, various fixes, Debian maintenance
.Ve
.PP
Glenn Engel <glenne@engel.org>
.PP
.Vb 1
\&    httpd
.Ve
